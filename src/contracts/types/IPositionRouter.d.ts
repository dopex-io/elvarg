/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  BaseContract,
  ContractTransaction,
  Overrides,
  PayableOverrides,
  CallOverrides,
} from 'ethers';
import { BytesLike } from '@ethersproject/bytes';
import { Listener, Provider } from '@ethersproject/providers';
import { FunctionFragment, EventFragment, Result } from '@ethersproject/abi';
import type { TypedEventFilter, TypedEvent, TypedListener } from './common';

interface IPositionRouterInterface extends ethers.utils.Interface {
  functions: {
    'createDecreasePosition(address[],address,uint256,uint256,bool,address,uint256,uint256,uint256,bool)': FunctionFragment;
    'createIncreasePosition(address[],address,uint256,uint256,uint256,bool,uint256,uint256,bytes32)': FunctionFragment;
    'decreasePositionsIndex(address)': FunctionFragment;
    'executeDecreasePosition(bytes32,address)': FunctionFragment;
    'executeDecreasePositions(uint256,address)': FunctionFragment;
    'executeIncreasePosition(bytes32,address)': FunctionFragment;
    'executeIncreasePositions(uint256,address)': FunctionFragment;
    'getRequestKey(address,uint256)': FunctionFragment;
    'increasePositionsIndex(address)': FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: 'createDecreasePosition',
    values: [
      string[],
      string,
      BigNumberish,
      BigNumberish,
      boolean,
      string,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      boolean
    ]
  ): string;
  encodeFunctionData(
    functionFragment: 'createIncreasePosition',
    values: [
      string[],
      string,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      boolean,
      BigNumberish,
      BigNumberish,
      BytesLike
    ]
  ): string;
  encodeFunctionData(
    functionFragment: 'decreasePositionsIndex',
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: 'executeDecreasePosition',
    values: [BytesLike, string]
  ): string;
  encodeFunctionData(
    functionFragment: 'executeDecreasePositions',
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: 'executeIncreasePosition',
    values: [BytesLike, string]
  ): string;
  encodeFunctionData(
    functionFragment: 'executeIncreasePositions',
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: 'getRequestKey',
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: 'increasePositionsIndex',
    values: [string]
  ): string;

  decodeFunctionResult(
    functionFragment: 'createDecreasePosition',
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: 'createIncreasePosition',
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: 'decreasePositionsIndex',
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: 'executeDecreasePosition',
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: 'executeDecreasePositions',
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: 'executeIncreasePosition',
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: 'executeIncreasePositions',
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: 'getRequestKey',
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: 'increasePositionsIndex',
    data: BytesLike
  ): Result;

  events: {};
}

export class IPositionRouter extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: IPositionRouterInterface;

  functions: {
    createDecreasePosition(
      _path: string[],
      _indexToken: string,
      _collateralDelta: BigNumberish,
      _sizeDelta: BigNumberish,
      _isLong: boolean,
      _receiver: string,
      _acceptablePrice: BigNumberish,
      _minOut: BigNumberish,
      _executionFee: BigNumberish,
      _withdrawETH: boolean,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    createIncreasePosition(
      _path: string[],
      _indexToken: string,
      _amountIn: BigNumberish,
      _minOut: BigNumberish,
      _sizeDelta: BigNumberish,
      _isLong: boolean,
      _acceptablePrice: BigNumberish,
      _executionFee: BigNumberish,
      _referralCode: BytesLike,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    decreasePositionsIndex(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    executeDecreasePosition(
      key: BytesLike,
      _executionFeeReceiver: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    executeDecreasePositions(
      _count: BigNumberish,
      _executionFeeReceiver: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    executeIncreasePosition(
      key: BytesLike,
      _executionFeeReceiver: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    executeIncreasePositions(
      _count: BigNumberish,
      _executionFeeReceiver: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    getRequestKey(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    increasePositionsIndex(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;
  };

  createDecreasePosition(
    _path: string[],
    _indexToken: string,
    _collateralDelta: BigNumberish,
    _sizeDelta: BigNumberish,
    _isLong: boolean,
    _receiver: string,
    _acceptablePrice: BigNumberish,
    _minOut: BigNumberish,
    _executionFee: BigNumberish,
    _withdrawETH: boolean,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  createIncreasePosition(
    _path: string[],
    _indexToken: string,
    _amountIn: BigNumberish,
    _minOut: BigNumberish,
    _sizeDelta: BigNumberish,
    _isLong: boolean,
    _acceptablePrice: BigNumberish,
    _executionFee: BigNumberish,
    _referralCode: BytesLike,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  decreasePositionsIndex(
    arg0: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  executeDecreasePosition(
    key: BytesLike,
    _executionFeeReceiver: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  executeDecreasePositions(
    _count: BigNumberish,
    _executionFeeReceiver: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  executeIncreasePosition(
    key: BytesLike,
    _executionFeeReceiver: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  executeIncreasePositions(
    _count: BigNumberish,
    _executionFeeReceiver: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  getRequestKey(
    arg0: string,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  increasePositionsIndex(
    arg0: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  callStatic: {
    createDecreasePosition(
      _path: string[],
      _indexToken: string,
      _collateralDelta: BigNumberish,
      _sizeDelta: BigNumberish,
      _isLong: boolean,
      _receiver: string,
      _acceptablePrice: BigNumberish,
      _minOut: BigNumberish,
      _executionFee: BigNumberish,
      _withdrawETH: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    createIncreasePosition(
      _path: string[],
      _indexToken: string,
      _amountIn: BigNumberish,
      _minOut: BigNumberish,
      _sizeDelta: BigNumberish,
      _isLong: boolean,
      _acceptablePrice: BigNumberish,
      _executionFee: BigNumberish,
      _referralCode: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    decreasePositionsIndex(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    executeDecreasePosition(
      key: BytesLike,
      _executionFeeReceiver: string,
      overrides?: CallOverrides
    ): Promise<void>;

    executeDecreasePositions(
      _count: BigNumberish,
      _executionFeeReceiver: string,
      overrides?: CallOverrides
    ): Promise<void>;

    executeIncreasePosition(
      key: BytesLike,
      _executionFeeReceiver: string,
      overrides?: CallOverrides
    ): Promise<void>;

    executeIncreasePositions(
      _count: BigNumberish,
      _executionFeeReceiver: string,
      overrides?: CallOverrides
    ): Promise<void>;

    getRequestKey(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    increasePositionsIndex(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  filters: {};

  estimateGas: {
    createDecreasePosition(
      _path: string[],
      _indexToken: string,
      _collateralDelta: BigNumberish,
      _sizeDelta: BigNumberish,
      _isLong: boolean,
      _receiver: string,
      _acceptablePrice: BigNumberish,
      _minOut: BigNumberish,
      _executionFee: BigNumberish,
      _withdrawETH: boolean,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    createIncreasePosition(
      _path: string[],
      _indexToken: string,
      _amountIn: BigNumberish,
      _minOut: BigNumberish,
      _sizeDelta: BigNumberish,
      _isLong: boolean,
      _acceptablePrice: BigNumberish,
      _executionFee: BigNumberish,
      _referralCode: BytesLike,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    decreasePositionsIndex(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    executeDecreasePosition(
      key: BytesLike,
      _executionFeeReceiver: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    executeDecreasePositions(
      _count: BigNumberish,
      _executionFeeReceiver: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    executeIncreasePosition(
      key: BytesLike,
      _executionFeeReceiver: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    executeIncreasePositions(
      _count: BigNumberish,
      _executionFeeReceiver: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    getRequestKey(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    increasePositionsIndex(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    createDecreasePosition(
      _path: string[],
      _indexToken: string,
      _collateralDelta: BigNumberish,
      _sizeDelta: BigNumberish,
      _isLong: boolean,
      _receiver: string,
      _acceptablePrice: BigNumberish,
      _minOut: BigNumberish,
      _executionFee: BigNumberish,
      _withdrawETH: boolean,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    createIncreasePosition(
      _path: string[],
      _indexToken: string,
      _amountIn: BigNumberish,
      _minOut: BigNumberish,
      _sizeDelta: BigNumberish,
      _isLong: boolean,
      _acceptablePrice: BigNumberish,
      _executionFee: BigNumberish,
      _referralCode: BytesLike,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    decreasePositionsIndex(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    executeDecreasePosition(
      key: BytesLike,
      _executionFeeReceiver: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    executeDecreasePositions(
      _count: BigNumberish,
      _executionFeeReceiver: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    executeIncreasePosition(
      key: BytesLike,
      _executionFeeReceiver: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    executeIncreasePositions(
      _count: BigNumberish,
      _executionFeeReceiver: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    getRequestKey(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    increasePositionsIndex(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
