/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  DopexPositionManager,
  DopexPositionManagerInterface,
} from '../DopexPositionManager';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'DopexPositionManagerError',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'path',
        type: 'address[]',
      },
      {
        internalType: 'address',
        name: 'indexToken',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'collateralDelta',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'positionSizeDelta',
        type: 'uint256',
      },
      {
        internalType: 'bool',
        name: 'withdrawETH',
        type: 'bool',
      },
    ],
    name: 'decreaseOrder',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address[]',
            name: 'path',
            type: 'address[]',
          },
          {
            internalType: 'address',
            name: 'indexToken',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'positionCollateralSize',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'positionSize',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executionFee',
            type: 'uint256',
          },
          {
            internalType: 'bytes32',
            name: 'referralCode',
            type: 'bytes32',
          },
          {
            internalType: 'bool',
            name: 'isCollateralOptionToken',
            type: 'bool',
          },
        ],
        internalType: 'struct DopexPositionManager.enableStrategyParams',
        name: 'params',
        type: 'tuple',
      },
      {
        internalType: 'address',
        name: '_gmxVault',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_gmxRouter',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_gmxPositionRouter',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_user',
        type: 'address',
      },
    ],
    name: 'enableAndCreateIncreaseOrder',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'gmxPositionRouter',
    outputs: [
      {
        internalType: 'contract IPositionRouter',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'gmxRouter',
    outputs: [
      {
        internalType: 'contract IRouter',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'gmxVault',
    outputs: [
      {
        internalType: 'contract IVault',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'path',
        type: 'address[]',
      },
      {
        internalType: 'address',
        name: 'indexToken',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'collateralDelta',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'positionSizeDelta',
        type: 'uint256',
      },
    ],
    name: 'increaseOrder',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isEnabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'minFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'referralCode',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'release',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'released',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'newFee',
        type: 'uint256',
      },
    ],
    name: 'setMinFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'newReferralCode',
        type: 'bytes32',
      },
    ],
    name: 'setReferralCode',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'strategyController',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'user',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '';

export class DopexPositionManager__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DopexPositionManager> {
    return super.deploy(overrides || {}) as Promise<DopexPositionManager>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DopexPositionManager {
    return super.attach(address) as DopexPositionManager;
  }
  connect(signer: Signer): DopexPositionManager__factory {
    return super.connect(signer) as DopexPositionManager__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DopexPositionManagerInterface {
    return new utils.Interface(_abi) as DopexPositionManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DopexPositionManager {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as DopexPositionManager;
  }
}
