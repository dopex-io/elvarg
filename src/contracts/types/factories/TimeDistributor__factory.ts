/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  TimeDistributor,
  TimeDistributorInterface,
} from '../TimeDistributor';

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'Distribute',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'rewardToken',
        type: 'address',
      },
    ],
    name: 'DistributionChange',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'TokensPerIntervalChange',
    type: 'event',
  },
  {
    inputs: [],
    name: 'DISTRIBUTION_INTERVAL',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'admin',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'distribute',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_receiver',
        type: 'address',
      },
    ],
    name: 'getDistributionAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_receiver',
        type: 'address',
      },
    ],
    name: 'getIntervals',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_receiver',
        type: 'address',
      },
    ],
    name: 'getRewardToken',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'gov',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'lastDistributionTime',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'rewardTokens',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: '_receivers',
        type: 'address[]',
      },
      {
        internalType: 'uint256[]',
        name: '_amounts',
        type: 'uint256[]',
      },
      {
        internalType: 'address[]',
        name: '_rewardTokens',
        type: 'address[]',
      },
    ],
    name: 'setDistribution',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_gov',
        type: 'address',
      },
    ],
    name: 'setGov',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_receiver',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256',
      },
    ],
    name: 'setTokensPerInterval',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'tokensPerInterval',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_receiver',
        type: 'address',
      },
    ],
    name: 'updateLastDistributionTime',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b5060008054336001600160a01b03199182168117835560018054909216179055610f4590819061004090396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063847ec40c1161008c578063cfad57a211610066578063cfad57a214610353578063e4fc6b6d14610379578063f5ab16cc14610381578063f851a440146103a7576100ea565b8063847ec40c146102e1578063b7fba9f614610307578063c27a1acd1461032d576100ea565b8063270da240116100c8578063270da2401461015557806341d0204b1461017b578063770788721461028f57806383b3dd24146102b5576100ea565b806308b26b75146100ef57806312d43a511461010957806319f7ab451461012d575b600080fd5b6100f76103af565b60408051918252519081900360200190f35b6101116103b5565b604080516001600160a01b039092168252519081900360200190f35b6101536004803603602081101561014357600080fd5b50356001600160a01b03166103c4565b005b6100f76004803603602081101561016b57600080fd5b50356001600160a01b031661042c565b6101536004803603606081101561019157600080fd5b8101906020810181356401000000008111156101ac57600080fd5b8201836020820111156101be57600080fd5b803590602001918460208302840111640100000000831117156101e057600080fd5b9193909290916020810190356401000000008111156101fe57600080fd5b82018360208201111561021057600080fd5b8035906020019184602083028401116401000000008311171561023257600080fd5b91939092909160208101903564010000000081111561025057600080fd5b82018360208201111561026257600080fd5b8035906020019184602083028401116401000000008311171561028457600080fd5b50909250905061043e565b610111600480360360208110156102a557600080fd5b50356001600160a01b031661060e565b610153600480360360408110156102cb57600080fd5b506001600160a01b03813516906020013561062f565b6100f7600480360360208110156102f757600080fd5b50356001600160a01b0316610761565b6100f76004803603602081101561031d57600080fd5b50356001600160a01b0316610773565b6100f76004803603602081101561034357600080fd5b50356001600160a01b0316610856565b6101536004803603602081101561036957600080fd5b50356001600160a01b0316610891565b6100f761090f565b6101116004803603602081101561039757600080fd5b50356001600160a01b03166109c7565b6101116109e2565b610e1081565b6000546001600160a01b031681565b6001546001600160a01b03163314610420576040805162461bcd60e51b815260206004820152601a6024820152792a34b6b2a234b9ba3934b13aba37b91d103337b93134b23232b760311b604482015290519081900360640190fd5b610429816109f1565b50565b60036020526000908152604090205481565b6000546001600160a01b0316331461049a576040805162461bcd60e51b815260206004820152601a6024820152792a34b6b2a234b9ba3934b13aba37b91d103337b93134b23232b760311b604482015290519081900360640190fd5b60005b858110156106055760008787838181106104b357fe5b905060200201356001600160a01b0316905060046000826001600160a01b03166001600160a01b031681526020019081526020016000205460001461053e5760006104fd82610856565b9050801561053c5760405162461bcd60e51b8152600401808060200182810382526025815260200180610ec16025913960400191505060405180910390fd5b505b600086868481811061054c57fe5b905060200201359050600085858581811061056357fe5b6001600160a01b0386811660009081526003602090815260408083208990556002825290912080546001600160a01b0319169190930294909401351692831790555090506105b0836109f1565b604080516001600160a01b0380861682526020820185905283168183015290517fabc51c16142cb4f85965fa5b3cfdeed4475e4751d9201718a2bfc334c152f6149181900360600190a150505060010161049d565b50505050505050565b6001600160a01b03808216600090815260026020526040902054165b919050565b6001546001600160a01b0316331461068b576040805162461bcd60e51b815260206004820152601a6024820152792a34b6b2a234b9ba3934b13aba37b91d103337b93134b23232b760311b604482015290519081900360640190fd5b6001600160a01b038216600090815260046020526040902054156106f55760006106b483610856565b905080156106f35760405162461bcd60e51b8152600401808060200182810382526025815260200180610ec16025913960400191505060405180910390fd5b505b6001600160a01b0382166000908152600360205260409020819055610719826109f1565b604080516001600160a01b03841681526020810183905281517f83a9322775b48550bbef762b82384c8ed0b747ff4c37188bd3bb72e3c7cca823929181900390910190a15050565b60046020526000908152604090205481565b6001600160a01b0381166000908152600360205260408120548061079b57600091505061062a565b60006107a684610856565b905060006107b48383610a23565b6001600160a01b038087166000908152600260209081526040918290205482516370a0823160e01b8152306004820152925194955085949316926370a08231926024808201939291829003018186803b15801561081057600080fd5b505afa158015610824573d6000803e3d6000fd5b505050506040513d602081101561083a57600080fd5b5051101561084e576000935050505061062a565b949350505050565b6001600160a01b038116600090815260046020526040812054819061087c904290610a85565b905061088a81610e10610ac7565b9392505050565b6000546001600160a01b031633146108ed576040805162461bcd60e51b815260206004820152601a6024820152792a34b6b2a234b9ba3934b13aba37b91d103337b93134b23232b760311b604482015290519081900360640190fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000338161091c82610856565b90508061092e576000925050506109c4565b600061093983610773565b9050610944836109f1565b8061095557600093505050506109c4565b6001600160a01b0380841660009081526002602052604090205461097b91168483610b09565b604080516001600160a01b03851681526020810183905281517fc1d32ad5cca423e7dda2123dbf8c482f8e77d00b631c06e903a47f2cec1334df929181900390910190a1925050505b90565b6002602052600090815260409020546001600160a01b031681565b6001546001600160a01b031681565b610a07610e10610a014282610ac7565b90610a23565b6001600160a01b03909116600090815260046020526040902055565b600082610a3257506000610a7f565b82820282848281610a3f57fe5b0414610a7c5760405162461bcd60e51b8152600401808060200182810382526021815260200180610ea06021913960400191505060405180910390fd5b90505b92915050565b6000610a7c83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610b60565b6000610a7c83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610bf7565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610b5b908490610c5c565b505050565b60008184841115610bef5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610bb4578181015183820152602001610b9c565b50505050905090810190601f168015610be15780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60008183610c465760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610bb4578181015183820152602001610b9c565b506000838581610c5257fe5b0495945050505050565b6060610cb1826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610d0d9092919063ffffffff16565b805190915015610b5b57808060200190516020811015610cd057600080fd5b5051610b5b5760405162461bcd60e51b815260040180806020018281038252602a815260200180610ee6602a913960400191505060405180910390fd5b606061084e848460008585610d2185610e33565b610d72576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b60208310610db15780518252601f199092019160209182019101610d92565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114610e13576040519150601f19603f3d011682016040523d82523d6000602084013e610e18565b606091505b5091509150610e28828286610e39565b979650505050505050565b3b151590565b60608315610e4857508161088a565b825115610e585782518084602001fd5b60405162461bcd60e51b8152602060048201818152845160248401528451859391928392604401919085019080838360008315610bb4578181015183820152602001610b9c56fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7754696d654469737472696275746f723a2070656e64696e6720646973747269627574696f6e5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a26469706673582212200e9eb4143838f6a2828c3a156fe55df2505bd9e58cb3d0b3f5f12f5c35a4db9964736f6c634300060c0033';

export class TimeDistributor__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TimeDistributor> {
    return super.deploy(overrides || {}) as Promise<TimeDistributor>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TimeDistributor {
    return super.attach(address) as TimeDistributor;
  }
  connect(signer: Signer): TimeDistributor__factory {
    return super.connect(signer) as TimeDistributor__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TimeDistributorInterface {
    return new utils.Interface(_abi) as TimeDistributorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TimeDistributor {
    return new Contract(address, _abi, signerOrProvider) as TimeDistributor;
  }
}
