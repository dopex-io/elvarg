/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  AtlanticPoolsFactory,
  AtlanticPoolsFactoryInterface,
} from '../AtlanticPoolsFactory';

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'quoteToken',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'baseToken',
            type: 'address',
          },
          {
            internalType: 'bool',
            name: 'isPut',
            type: 'bool',
          },
          {
            internalType: 'enum AtlanticPoolsFactory.ExpiryType',
            name: 'expiryType',
            type: 'uint8',
          },
        ],
        indexed: false,
        internalType: 'struct AtlanticPoolsFactory.AtlanticPool',
        name: 'pool',
        type: 'tuple',
      },
      {
        indexed: true,
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'NewPoolDeployed',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'expiries',
        type: 'address',
      },
    ],
    name: 'PoolBootstrapped',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    name: 'atlanticPools',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'atlanticPoolsList',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'createPool',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'baseToken',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'isPut',
        type: 'bool',
      },
      {
        internalType: 'enum AtlanticPoolsFactory.ExpiryType',
        name: 'expiryType',
        type: 'uint8',
      },
    ],
    name: 'getAtlanticPool',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'baseToken',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'isPut',
        type: 'bool',
      },
      {
        internalType: 'enum AtlanticPoolsFactory.ExpiryType',
        name: 'expiryType',
        type: 'uint8',
      },
    ],
    name: 'getPoolKey',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256[]',
        name: 'expiries',
        type: 'uint256[]',
      },
      {
        internalType: 'address[]',
        name: 'pools',
        type: 'address[]',
      },
    ],
    name: 'massBootstrap',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6106768061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638da5cb5b116100665780638da5cb5b1461010e5780639a06b1131461011f578063c68aced214610127578063e466cc0e1461013a578063f2fde38b1461015b57600080fd5b8063477510221461009857806350d2188f146100ad578063536d8e44146100f3578063715018a614610106575b600080fd5b6100ab6100a636600461048b565b61016e565b005b6100d66100bb3660046104f7565b6002602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100d66101013660046104f7565b610261565b6100ab61028b565b6000546001600160a01b03166100d6565b6100ab6102c1565b6100d661013536600461052c565b6102eb565b61014d61014836600461052c565b61031e565b6040519081526020016100ea565b6100ab61016936600461057e565b610354565b6000546001600160a01b031633146101a15760405162461bcd60e51b8152600401610198906105a0565b60405180910390fd5b6000805b82811015610259578383828181106101bf576101bf6105d5565b90506020020160208101906101d4919061057e565b9150816001600160a01b0316633686a39e8787848181106101f7576101f76105d5565b905060200201356040518263ffffffff1660e01b815260040161021c91815260200190565b600060405180830381600087803b15801561023657600080fd5b505af115801561024a573d6000803e3d6000fd5b505050508060010190506101a5565b505050505050565b6001818154811061027157600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b031633146102b55760405162461bcd60e51b8152600401610198906105a0565b6102bf60006103ef565b565b6000546001600160a01b031633146102bf5760405162461bcd60e51b8152600401610198906105a0565b6000600260006102fc86868661031e565b81526020810191909152604001600020546001600160a01b0316949350505050565b6000838383604051602001610335939291906105eb565b6040516020818303038152906040528051906020012090509392505050565b6000546001600160a01b0316331461037e5760405162461bcd60e51b8152600401610198906105a0565b6001600160a01b0381166103e35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610198565b6103ec816103ef565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008083601f84011261045157600080fd5b50813567ffffffffffffffff81111561046957600080fd5b6020830191508360208260051b850101111561048457600080fd5b9250929050565b600080600080604085870312156104a157600080fd5b843567ffffffffffffffff808211156104b957600080fd5b6104c58883890161043f565b909650945060208701359150808211156104de57600080fd5b506104eb8782880161043f565b95989497509550505050565b60006020828403121561050957600080fd5b5035919050565b80356001600160a01b038116811461052757600080fd5b919050565b60008060006060848603121561054157600080fd5b61054a84610510565b92506020840135801515811461055f57600080fd5b915060408401356003811061057357600080fd5b809150509250925092565b60006020828403121561059057600080fd5b61059982610510565b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6bffffffffffffffffffffffff198460601b16815282151560f81b601482015260006003831061062b57634e487b7160e01b600052602160045260246000fd5b5060f89190911b60158201526016019291505056fea2646970667358221220fd85e42394dca493fd54453698e60f516df1972d17fdeb0c2633ceae1f595cbd64736f6c63430008090033';

export class AtlanticPoolsFactory__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AtlanticPoolsFactory> {
    return super.deploy(overrides || {}) as Promise<AtlanticPoolsFactory>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): AtlanticPoolsFactory {
    return super.attach(address) as AtlanticPoolsFactory;
  }
  connect(signer: Signer): AtlanticPoolsFactory__factory {
    return super.connect(signer) as AtlanticPoolsFactory__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AtlanticPoolsFactoryInterface {
    return new utils.Interface(_abi) as AtlanticPoolsFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AtlanticPoolsFactory {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AtlanticPoolsFactory;
  }
}
