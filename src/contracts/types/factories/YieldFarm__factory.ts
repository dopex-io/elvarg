/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { YieldFarm, YieldFarmInterface } from '../YieldFarm';

const _abi = [
  {
    inputs: [
      {
        internalType: 'string',
        name: '_name',
        type: 'string',
      },
      {
        internalType: 'string',
        name: '_symbol',
        type: 'string',
      },
      {
        internalType: 'address',
        name: '_stakingToken',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
    ],
    name: 'addAdmin',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
    ],
    name: 'addNonStakingAccount',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'admins',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_spender',
        type: 'address',
      },
    ],
    name: 'allowance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'allowances',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'balances',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_receiver',
        type: 'address',
      },
    ],
    name: 'claim',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'decimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'gov',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'inWhitelistMode',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'nonStakingAccounts',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'nonStakingSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_receiver',
        type: 'address',
      },
    ],
    name: 'recoverClaim',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
    ],
    name: 'removeAdmin',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
    ],
    name: 'removeNonStakingAccount',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_gov',
        type: 'address',
      },
    ],
    name: 'setGov',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_inWhitelistMode',
        type: 'bool',
      },
    ],
    name: 'setInWhitelistMode',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: '_name',
        type: 'string',
      },
      {
        internalType: 'string',
        name: '_symbol',
        type: 'string',
      },
    ],
    name: 'setInfo',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_handler',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: '_isWhitelisted',
        type: 'bool',
      },
    ],
    name: 'setWhitelistedHandler',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: '_yieldTrackers',
        type: 'address[]',
      },
    ],
    name: 'setYieldTrackers',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256',
      },
    ],
    name: 'stake',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
    ],
    name: 'stakedBalance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'stakingToken',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalStaked',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_recipient',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256',
      },
    ],
    name: 'transfer',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_sender',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_recipient',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256',
      },
    ],
    name: 'unstake',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'whitelistedHandlers',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_token',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256',
      },
    ],
    name: 'withdrawToken',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'yieldTrackers',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040523480156200001157600080fd5b50604051620026c5380380620026c5833981810160405260608110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82516401000000008111828201881017156200008957600080fd5b82525081516020918201929091019080838360005b83811015620000b85781810151838201526020016200009e565b50505050905090810190601f168015620000e65780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200010a57600080fd5b9083019060208201858111156200012057600080fd5b82516401000000008111828201881017156200013b57600080fd5b82525081516020918201929091019080838360005b838110156200016a57818101518382015260200162000150565b50505050905090810190601f168015620001985780820380516001836020036101000a031916815260200191505b5060405260209081015185519093508592508491600091620001c09183919086019062000479565b508151620001d690600190602085019062000479565b50600480546001600160a01b031916339081179091556000818152600960205260409020805460ff1916600117905562000211908262000242565b50506001600c5550600d80546001600160a01b0319166001600160a01b039290921691909117905550620005159050565b6001600160a01b038216620002895760405162461bcd60e51b8152600401808060200182810382526024815260200180620026a16024913960400191505060405180910390fd5b620002948262000378565b620002b0816002546200041760201b620013c11790919060201c565b6002556001600160a01b038216600090815260056020908152604090912054620002e5918390620013c162000417821b17901c565b6001600160a01b03831660009081526005602090815260408083209390935560089052205460ff161562000333576200032f816003546200041760201b620013c11790919060201c565b6003555b6040805182815290516001600160a01b038416916000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b60005b60075481101562000413576000600782815481106200039657fe5b600091825260208220015460408051635fd6196560e01b81526001600160a01b03878116600483015291519190921693508392635fd61965926024808201939182900301818387803b158015620003ec57600080fd5b505af115801562000401573d6000803e3d6000fd5b5050600190930192506200037b915050565b5050565b60008282018381101562000472576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620004bc57805160ff1916838001178555620004ec565b82800160010185558215620004ec579182015b82811115620004ec578251825591602001919060010190620004cf565b50620004fa929150620004fe565b5090565b5b80821115620004fa5760008155600101620004ff565b61217c80620005256000396000f3fe608060405234801561001057600080fd5b50600436106102115760003560e01c806355b6ed5c11610125578063996f11ee116100ad578063c93be6361161007c578063c93be63614610807578063cfad57a21461080f578063d92fc87e14610835578063dd62ed3e14610863578063fb30d9161461089157610211565b8063996f11ee14610663578063a694fc3a14610691578063a9059cbb146106ae578063a923fc40146106da57610211565b806370a08231116100f457806370a08231146105ff57806372f702f314610625578063817b1cd21461062d5780639554381a1461063557806395d89b411461065b57610211565b806355b6ed5c1461055f578063602172671461058d57806362289077146105b357806370480275146105d957610211565b8063276eab4e116101a8578063313ce56711610177578063313ce567146104b957806336300051146104d7578063429b62e5146104fd5780634cb5bbe31461052357806352cd38d91461054257610211565b8063276eab4e146103cb57806327e235e31461046e578063293d6987146104945780632e17de781461049c57610211565b80631785f53c116101e45780631785f53c1461032f57806318160ddd146103555780631e83409a1461036f57806323b872dd1461039557610211565b806301e336671461021657806306fdde031461024e578063095ea7b3146102cb57806312d43a511461030b575b600080fd5b61024c6004803603606081101561022c57600080fd5b506001600160a01b038135811691602081013590911690604001356108b7565b005b61025661091d565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610290578181015183820152602001610278565b50505050905090810190601f1680156102bd5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102f7600480360360408110156102e157600080fd5b506001600160a01b0381351690602001356109ab565b604080519115158252519081900360200190f35b6103136109c1565b604080516001600160a01b039092168252519081900360200190f35b61024c6004803603602081101561034557600080fd5b50356001600160a01b03166109d0565b61035d610a3e565b60408051918252519081900360200190f35b61024c6004803603602081101561038557600080fd5b50356001600160a01b0316610a44565b6102f7600480360360608110156103ab57600080fd5b506001600160a01b03813581169160208101359091169060400135610afb565b61024c600480360360208110156103e157600080fd5b8101906020810181356401000000008111156103fc57600080fd5b82018360208201111561040e57600080fd5b8035906020019184602083028401116401000000008311171561043057600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550610b6b945050505050565b61035d6004803603602081101561048457600080fd5b50356001600160a01b0316610bcb565b6102f7610bdd565b61024c600480360360208110156104b257600080fd5b5035610be6565b6104c1610c6c565b6040805160ff9092168252519081900360200190f35b6102f7600480360360208110156104ed57600080fd5b50356001600160a01b0316610c71565b6102f76004803603602081101561051357600080fd5b50356001600160a01b0316610c86565b61024c6004803603602081101561053957600080fd5b50351515610c9b565b6103136004803603602081101561055857600080fd5b5035610cfb565b61035d6004803603604081101561057557600080fd5b506001600160a01b0381358116916020013516610d22565b61035d600480360360208110156105a357600080fd5b50356001600160a01b0316610d3f565b61024c600480360360208110156105c957600080fd5b50356001600160a01b0316610d88565b61024c600480360360208110156105ef57600080fd5b50356001600160a01b0316610e7b565b61035d6004803603602081101561061557600080fd5b50356001600160a01b0316610eec565b610313610f07565b61035d610f16565b6102f76004803603602081101561064b57600080fd5b50356001600160a01b0316610f34565b610256610f49565b61024c6004803603604081101561067957600080fd5b506001600160a01b0381358116916020013516610fa3565b61024c600480360360208110156106a757600080fd5b50356110aa565b6102f7600480360360408110156106c457600080fd5b506001600160a01b038135169060200135611129565b61024c600480360360408110156106f057600080fd5b81019060208101813564010000000081111561070b57600080fd5b82018360208201111561071d57600080fd5b8035906020019184600183028401116401000000008311171561073f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929594936020810193503591505064010000000081111561079257600080fd5b8201836020820111156107a457600080fd5b803590602001918460018302840111640100000000831117156107c657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611136945050505050565b61035d6111aa565b61024c6004803603602081101561082557600080fd5b50356001600160a01b03166111b0565b61024c6004803603604081101561084b57600080fd5b506001600160a01b038135169060200135151561121f565b61035d6004803603604081101561087957600080fd5b506001600160a01b0381358116916020013516611297565b61024c600480360360208110156108a757600080fd5b50356001600160a01b03166112c2565b6004546001600160a01b03163314610904576040805162461bcd60e51b815260206004820152601560248201526000805160206120fc833981519152604482015290519081900360640190fd5b6109186001600160a01b038416838361141b565b505050565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156109a35780601f10610978576101008083540402835291602001916109a3565b820191906000526020600020905b81548152906001019060200180831161098657829003601f168201915b505050505081565b60006109b833848461146d565b50600192915050565b6004546001600160a01b031681565b6004546001600160a01b03163314610a1d576040805162461bcd60e51b815260206004820152601560248201526000805160206120fc833981519152604482015290519081900360640190fd5b6001600160a01b03166000908152600960205260409020805460ff19169055565b60025481565b60005b600754811015610af757600060078281548110610a6057fe5b6000918252602080832090910154604080516310e059a160e11b81523360048201526001600160a01b038881166024830152915191909216945084936321c0b34293604480850194919392918390030190829087803b158015610ac257600080fd5b505af1158015610ad6573d6000803e3d6000fd5b505050506040513d6020811015610aec57600080fd5b505050600101610a47565b5050565b600080610b46836040518060600160405280602d81526020016120a9602d91396001600160a01b03881660009081526006602090815260408083203384529091529020549190611559565b9050610b5385338361146d565b610b5e8585856115f0565b60019150505b9392505050565b6004546001600160a01b03163314610bb8576040805162461bcd60e51b815260206004820152601560248201526000805160206120fc833981519152604482015290519081900360640190fd5b8051610af7906007906020840190611e0f565b60056020526000908152604090205481565b600a5460ff1681565b6002600c541415610c3e576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b6002600c55610c4d3382611818565b600d54610c64906001600160a01b0316338361141b565b506001600c55565b601281565b600b6020526000908152604090205460ff1681565b60096020526000908152604090205460ff1681565b6004546001600160a01b03163314610ce8576040805162461bcd60e51b815260206004820152601560248201526000805160206120fc833981519152604482015290519081900360640190fd5b600a805460ff1916911515919091179055565b60078181548110610d0857fe5b6000918252602090912001546001600160a01b0316905081565b600660209081526000928352604080842090915290825290205481565b6001600160a01b03811660009081526008602052604081205460ff1615610d6857506000610d83565b506001600160a01b0381166000908152600560205260409020545b919050565b3360009081526009602052604090205460ff16610dda576040805162461bcd60e51b815260206004820152601560248201526000805160206120fc833981519152604482015290519081900360640190fd5b6001600160a01b03811660009081526008602052604090205460ff1615610e325760405162461bcd60e51b8152600401808060200182810382526023815260200180611f236023913960400191505060405180910390fd5b610e3b81611943565b6001600160a01b0381166000908152600860209081526040808320805460ff191660011790556005909152902054600354610e75916113c1565b60035550565b6004546001600160a01b03163314610ec8576040805162461bcd60e51b815260206004820152601560248201526000805160206120fc833981519152604482015290519081900360640190fd5b6001600160a01b03166000908152600960205260409020805460ff19166001179055565b6001600160a01b031660009081526005602052604090205490565b600d546001600160a01b031681565b6000610f2f6003546002546119d990919063ffffffff16565b905090565b60086020526000908152604090205460ff1681565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156109a35780601f10610978576101008083540402835291602001916109a3565b3360009081526009602052604090205460ff16610ff5576040805162461bcd60e51b815260206004820152601560248201526000805160206120fc833981519152604482015290519081900360640190fd5b60005b6007548110156109185760006007828154811061101157fe5b6000918252602080832090910154604080516310e059a160e11b81526001600160a01b0389811660048301528881166024830152915191909216945084936321c0b34293604480850194919392918390030190829087803b15801561107557600080fd5b505af1158015611089573d6000803e3d6000fd5b505050506040513d602081101561109f57600080fd5b505050600101610ff8565b6002600c541415611102576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b6002600c55600d5461111f906001600160a01b0316333084611a1b565b610c643382611a7b565b60006109b83384846115f0565b6004546001600160a01b03163314611183576040805162461bcd60e51b815260206004820152601560248201526000805160206120fc833981519152604482015290519081900360640190fd5b8151611196906000906020850190611e74565b508051610918906001906020840190611e74565b60035481565b6004546001600160a01b031633146111fd576040805162461bcd60e51b815260206004820152601560248201526000805160206120fc833981519152604482015290519081900360640190fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6004546001600160a01b0316331461126c576040805162461bcd60e51b815260206004820152601560248201526000805160206120fc833981519152604482015290519081900360640190fd5b6001600160a01b03919091166000908152600b60205260409020805460ff1916911515919091179055565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205490565b3360009081526009602052604090205460ff16611314576040805162461bcd60e51b815260206004820152601560248201526000805160206120fc833981519152604482015290519081900360640190fd5b6001600160a01b03811660009081526008602052604090205460ff16611381576040805162461bcd60e51b815260206004820152601f60248201527f5969656c64546f6b656e3a205f6163636f756e74206e6f74206d61726b656400604482015290519081900360640190fd5b61138a81611943565b6001600160a01b0381166000908152600860209081526040808320805460ff191690556005909152902054600354610e75916119d9565b600082820183811015610b64576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610918908490611b7f565b6001600160a01b0383166114b25760405162461bcd60e51b81526004018080602001828103825260298152602001806120806029913960400191505060405180910390fd5b6001600160a01b0382166114f75760405162461bcd60e51b8152600401808060200182810382526027815260200180611fe46027913960400191505060405180910390fd5b6001600160a01b03808416600081815260066020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b600081848411156115e85760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156115ad578181015183820152602001611595565b50505050905090810190601f1680156115da5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6001600160a01b0383166116355760405162461bcd60e51b815260040180806020018281038252602a815260200180611f6e602a913960400191505060405180910390fd5b6001600160a01b03821661167a5760405162461bcd60e51b8152600401808060200182810382526028815260200180611f466028913960400191505060405180910390fd5b600a5460ff16156116d357336000908152600b602052604090205460ff166116d35760405162461bcd60e51b81526004018080602001828103825260268152602001806120d66026913960400191505060405180910390fd5b6116dc83611943565b6116e582611943565b611722816040518060600160405280602b815260200161211c602b91396001600160a01b0386166000908152600560205260409020549190611559565b6001600160a01b03808516600090815260056020526040808220939093559084168152205461175190826113c1565b6001600160a01b0380841660009081526005602090815260408083209490945591861681526008909152205460ff16156117965760035461179290826119d9565b6003555b6001600160a01b03821660009081526008602052604090205460ff16156117c8576003546117c490826113c1565b6003555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6001600160a01b03821661185d5760405162461bcd60e51b8152600401808060200182810382526026815260200180611f986026913960400191505060405180910390fd5b61186682611943565b6118a38160405180606001604052806027815260200161200b602791396001600160a01b0385166000908152600560205260409020549190611559565b6001600160a01b0383166000908152600560205260409020556002546118c990826119d9565b6002556001600160a01b03821660009081526008602052604090205460ff16156118fe576003546118fa90826119d9565b6003555b6040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b60005b600754811015610af75760006007828154811061195f57fe5b600091825260208220015460408051635fd6196560e01b81526001600160a01b03878116600483015291519190921693508392635fd61965926024808201939182900301818387803b1580156119b457600080fd5b505af11580156119c8573d6000803e3d6000fd5b505060019093019250611946915050565b6000610b6483836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611559565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052611a75908590611b7f565b50505050565b6001600160a01b038216611ac05760405162461bcd60e51b81526004018080602001828103825260248152602001806120326024913960400191505060405180910390fd5b611ac982611943565b600254611ad690826113c1565b6002556001600160a01b038216600090815260056020526040902054611afc90826113c1565b6001600160a01b03831660009081526005602090815260408083209390935560089052205460ff1615611b3a57600354611b3690826113c1565b6003555b6040805182815290516001600160a01b038416916000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b6060611bd4826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611c309092919063ffffffff16565b80519091501561091857808060200190516020811015611bf357600080fd5b50516109185760405162461bcd60e51b815260040180806020018281038252602a815260200180612056602a913960400191505060405180910390fd5b6060611c3f8484600085611c47565b949350505050565b606082471015611c885760405162461bcd60e51b8152600401808060200182810382526026815260200180611fbe6026913960400191505060405180910390fd5b611c9185611da3565b611ce2576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b60208310611d215780518252601f199092019160209182019101611d02565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114611d83576040519150601f19603f3d011682016040523d82523d6000602084013e611d88565b606091505b5091509150611d98828286611da9565b979650505050505050565b3b151590565b60608315611db8575081610b64565b825115611dc85782518084602001fd5b60405162461bcd60e51b81526020600482018181528451602484015284518593919283926044019190850190808383600083156115ad578181015183820152602001611595565b828054828255906000526020600020908101928215611e64579160200282015b82811115611e6457825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190611e2f565b50611e70929150611eee565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611eb557805160ff1916838001178555611ee2565b82800160010185558215611ee2579182015b82811115611ee2578251825591602001919060010190611ec7565b50611e70929150611f0d565b5b80821115611e705780546001600160a01b0319168155600101611eef565b5b80821115611e705760008155600101611f0e56fe5969656c64546f6b656e3a205f6163636f756e7420616c7265616479206d61726b65645969656c64546f6b656e3a207472616e7366657220746f20746865207a65726f20616464726573735969656c64546f6b656e3a207472616e736665722066726f6d20746865207a65726f20616464726573735969656c64546f6b656e3a206275726e2066726f6d20746865207a65726f2061646472657373416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c5969656c64546f6b656e3a20617070726f766520746f20746865207a65726f20616464726573735969656c64546f6b656e3a206275726e20616d6f756e7420657863656564732062616c616e63655969656c64546f6b656e3a206d696e7420746f20746865207a65726f20616464726573735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565645969656c64546f6b656e3a20617070726f76652066726f6d20746865207a65726f20616464726573735969656c64546f6b656e3a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e63655969656c64546f6b656e3a206d73672e73656e646572206e6f742077686974656c69737465645969656c64546f6b656e3a20666f7262696464656e00000000000000000000005969656c64546f6b656e3a207472616e7366657220616d6f756e7420657863656564732062616c616e6365a2646970667358221220e000d594777685dca8d64d8320d780daf90ed95f0e981ab50fdc74a9b1f00ef364736f6c634300060c00335969656c64546f6b656e3a206d696e7420746f20746865207a65726f2061646472657373';

export class YieldFarm__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _name: string,
    _symbol: string,
    _stakingToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<YieldFarm> {
    return super.deploy(
      _name,
      _symbol,
      _stakingToken,
      overrides || {}
    ) as Promise<YieldFarm>;
  }
  getDeployTransaction(
    _name: string,
    _symbol: string,
    _stakingToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _stakingToken,
      overrides || {}
    );
  }
  attach(address: string): YieldFarm {
    return super.attach(address) as YieldFarm;
  }
  connect(signer: Signer): YieldFarm__factory {
    return super.connect(signer) as YieldFarm__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): YieldFarmInterface {
    return new utils.Interface(_abi) as YieldFarmInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): YieldFarm {
    return new Contract(address, _abi, signerOrProvider) as YieldFarm;
  }
}
