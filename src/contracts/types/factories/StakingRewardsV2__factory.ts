/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  StakingRewardsV2,
  StakingRewardsV2Interface,
} from '../StakingRewardsV2';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_rewardsTokenDPX',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_rewardsTokenRDPX',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_stakingToken',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_rewardsDuration',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_boostedTimePeriod',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_boost',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: '_contract',
        type: 'address',
      },
    ],
    name: 'AddToContractWhitelist',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: '_contract',
        type: 'address',
      },
    ],
    name: 'RemoveFromContractWhitelist',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'rewardDPX',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'rewardRDPX',
        type: 'uint256',
      },
    ],
    name: 'RewardAdded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'rewardDPX',
        type: 'uint256',
      },
    ],
    name: 'RewardCompounded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'reward',
        type: 'uint256',
      },
    ],
    name: 'RewardPaid',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'rewardDPX',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'rewardRDPX',
        type: 'uint256',
      },
    ],
    name: 'RewardUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'Staked',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'Withdrawn',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_contract',
        type: 'address',
      },
    ],
    name: 'addToContractWhitelist',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'boost',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'boostedFinish',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'boostedTimePeriod',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'compound',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'earned',
    outputs: [
      {
        internalType: 'uint256',
        name: 'DPXtokensEarned',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'RDPXtokensEarned',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'exit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'rewardsTokenID',
        type: 'uint256',
      },
    ],
    name: 'getReward',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'id',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'addr',
        type: 'address',
      },
    ],
    name: 'isContract',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'lastTimeRewardApplicable',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'lastUpdateTime',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'rewardDPX',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'rewardRDPX',
        type: 'uint256',
      },
    ],
    name: 'notifyRewardAmount',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'periodFinish',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_contract',
        type: 'address',
      },
    ],
    name: 'removeFromContractWhitelist',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rewardPerToken',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rewardPerTokenStoredDPX',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rewardPerTokenStoredRDPX',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rewardRateDPX',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rewardRateRDPX',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'rewardsDPX',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rewardsDuration',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'rewardsRDPX',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rewardsTokenDPX',
    outputs: [
      {
        internalType: 'contract IERC20',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rewardsTokenRDPX',
    outputs: [
      {
        internalType: 'contract IERC20',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'stake',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'stakingToken',
    outputs: [
      {
        internalType: 'contract IERC20',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'userDPXRewardPerTokenPaid',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'userRDPXRewardPerTokenPaid',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'whitelistedContracts',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'withdraw',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'withdrawRewardTokens',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x6080604052600060055560006006556000600755600060085560006009553480156200002a57600080fd5b506040516200211a3803806200211a8339810160408190526200004d916200011f565b60016000556200005d33620000b0565b600280546001600160a01b03199081166001600160a01b039889161790915560038054821696881696909617909555600480549095169390951692909217909255600a91909155600e5560055562000185565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b03811681146200011a57600080fd5b919050565b60008060008060008060c087890312156200013957600080fd5b620001448762000102565b9550620001546020880162000102565b9450620001646040880162000102565b9350606087015192506080870151915060a087015190509295509295509295565b611f8580620001956000396000f3fe6080604052600436106102195760003560e01c80638da5cb5b11610123578063c11e1e4b116100ab578063e363208e1161006f578063e363208e14610621578063e9fad8ee14610641578063ebe2b12b14610656578063f2fde38b1461066c578063f69e20461461068c57600080fd5b8063c11e1e4b14610593578063c3d9ed39146105c0578063c8f33c91146105e0578063c9b6b2b1146105f6578063cd3daf9d1461060c57600080fd5b8063ac2c5413116100f2578063ac2c541314610504578063acc3a0061461051a578063ad46a40c1461053a578063af640d0f14610550578063bc1e25dc1461056657600080fd5b80638da5cb5b14610490578063a1411e67146104ae578063a66f42c0146104db578063a694fc3a146104f157600080fd5b8063370243dc116101a657806370a082311161017557806370a08231146103fa578063715018a61461043057806372f702f31461044557806380faa57d146104655780638a0dfa0d1461047a57600080fd5b8063370243dc14610389578063386a95251461039e57806338736f49146103b4578063391feebb146103ca57600080fd5b806318156416116101ed57806318156416146102e557806318160ddd146103125780631c4b774b14610327578063246132f9146103495780632e1a7d4d1461036957600080fd5b80628cc2621461021e5780630131c87014610258578063080b3ead1461029057806316279055146102b4575b600080fd5b34801561022a57600080fd5b5061023e610239366004611d43565b6106a1565b604080519283526020830191909152015b60405180910390f35b34801561026457600080fd5b50600254610278906001600160a01b031681565b6040516001600160a01b03909116815260200161024f565b34801561029c57600080fd5b506102a660085481565b60405190815260200161024f565b3480156102c057600080fd5b506102d56102cf366004611d43565b3b151590565b604051901515815260200161024f565b3480156102f157600080fd5b506102a6610300366004611d43565b60126020526000908152604090205481565b34801561031e57600080fd5b506016546102a6565b34801561033357600080fd5b50610347610342366004611d6c565b610778565b005b34801561035557600080fd5b50610347610364366004611d85565b610a63565b34801561037557600080fd5b50610347610384366004611d6c565b610c3d565b34801561039557600080fd5b5061023e610e08565b3480156103aa57600080fd5b506102a6600a5481565b3480156103c057600080fd5b506102a6600c5481565b3480156103d657600080fd5b506102d56103e5366004611d43565b60106020526000908152604090205460ff1681565b34801561040657600080fd5b506102a6610415366004611d43565b6001600160a01b031660009081526015602052604090205490565b34801561043c57600080fd5b50610347611017565b34801561045157600080fd5b50600454610278906001600160a01b031681565b34801561047157600080fd5b506102a661104d565b34801561048657600080fd5b506102a660095481565b34801561049c57600080fd5b506001546001600160a01b0316610278565b3480156104ba57600080fd5b506102a66104c9366004611d43565b60146020526000908152604090205481565b3480156104e757600080fd5b506102a660055481565b6103476104ff366004611d6c565b611062565b34801561051057600080fd5b506102a660075481565b34801561052657600080fd5b506102d5610535366004611d43565b611244565b34801561054657600080fd5b506102a6600d5481565b34801561055c57600080fd5b506102a6600f5481565b34801561057257600080fd5b506102a6610581366004611d43565b60116020526000908152604090205481565b34801561059f57600080fd5b506102a66105ae366004611d43565b60136020526000908152604090205481565b3480156105cc57600080fd5b506102d56105db366004611d43565b6113a9565b3480156105ec57600080fd5b506102a6600b5481565b34801561060257600080fd5b506102a6600e5481565b34801561061857600080fd5b5061023e61149d565b34801561062d57600080fd5b50600354610278906001600160a01b031681565b34801561064d57600080fd5b50610347611685565b34801561066257600080fd5b506102a660065481565b34801561067857600080fd5b50610347610687366004611d43565b6116a8565b34801561069857600080fd5b50610347611743565b6000806000806106af61149d565b6001600160a01b0387166000908152601360209081526040808320546011909252909120549294509092506107269161072090670de0b6b3a76400009061071a906106fb9088906119b4565b6001600160a01b038b16600090815260156020526040902054906119c7565b906119d3565b906119df565b6001600160a01b03861660009081526014602090815260408083205460129092529091205491955061076f9161072090670de0b6b3a76400009061071a906106fb9087906119b4565b92505050915091565b600260005414156107a45760405162461bcd60e51b815260040161079b90611da7565b60405180910390fd5b6002600055336107b261149d565b600d55600c556107c061104d565b600b556001600160a01b0381161561081e576107db816106a1565b6001600160a01b0383166000908152601360209081526040808320601483528184209490945593909255600c546011835283822055600d54601290925291909120555b816108e45733600090815260136020526040902054806108805760405162461bcd60e51b815260206004820152601d60248201527f63616e206e6f7420776974686472617720302044505820726577617264000000604482015260640161079b565b336000818152601360205260408120556002546108a9916001600160a01b0390911690836119eb565b60405181815233907fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e04869060200160405180910390a250610a5a565b816001141561097357336000908152601460205260409020548061094a5760405162461bcd60e51b815260206004820152601e60248201527f63616e206e6f7420776974686472617720302052445058207265776172640000604482015260640161079b565b336000818152601460205260408120556003546108a9916001600160a01b0390911690836119eb565b3360009081526013602090815260408083205460149092529091205481156109be57336000818152601360205260408120556002546109be916001600160a01b0390911690846119eb565b80156109ed57336000818152601460205260408120556003546109ed916001600160a01b0390911690836119eb565b60405182815233907fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e04869060200160405180910390a260405181815233907fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e04869060200160405180910390a250505b50506001600055565b6001546001600160a01b03163314610a8d5760405162461bcd60e51b815260040161079b90611dde565b6000610a9761149d565b600d55600c55610aa561104d565b600b556001600160a01b03811615610b0357610ac0816106a1565b6001600160a01b0383166000908152601360209081526040808320601483528184209490945593909255600c546011835283822055600d54601290925291909120555b600654610b7857610b2b610b24600e54600a546119df90919063ffffffff16565b84906119d3565b600855600e54600a54610b4991610b4291906119df565b83906119d3565b60095542600b819055600a54610b5f91906119df565b600655600e54610b709042906119df565b600755610bff565b600654600090610b8890426119b4565b90506000610ba1600854836119c790919063ffffffff16565b90506000610bba600954846119c790919063ffffffff16565b600a54909150610bce9061071a88856119df565b600855600a54610be29061071a87846119df565b60095542600b819055600a54610bf891906119df565b6006555050505b60408051848152602081018490527f6c07ee05dcf262f13abf9d87b846ee789d2f90fe991d495acd7d7fc109ee1f55910160405180910390a1505050565b60026000541415610c605760405162461bcd60e51b815260040161079b90611da7565b600260005533610c6e61149d565b600d55600c55610c7c61104d565b600b556001600160a01b03811615610cda57610c97816106a1565b6001600160a01b0383166000908152601360209081526040808320601483528184209490945593909255600c546011835283822055600d54601290925291909120555b60008211610d1e5760405162461bcd60e51b8152602060048201526011602482015270043616e6e6f74207769746864726177203607c1b604482015260640161079b565b33600090815260156020526040902054821115610d735760405162461bcd60e51b8152602060048201526013602482015272496e737566666963656e742062616c616e636560681b604482015260640161079b565b601654610d8090836119b4565b60165533600090815260156020526040902054610d9d90836119b4565b33600081815260156020526040902091909155600454610dc9916001600160a01b0390911690846119eb565b60405182815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5906020015b60405180910390a250506001600055565b600080336001600160a01b0316610e276001546001600160a01b031690565b6001600160a01b031614610e4d5760405162461bcd60e51b815260040161079b90611dde565b6000610e616001546001600160a01b031690565b90506001600160a01b038116331415611008576002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b158015610eb857600080fd5b505afa158015610ecc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ef09190611e13565b6003546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a082319060240160206040518083038186803b158015610f3957600080fd5b505afa158015610f4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f719190611e13565b6002546004549192506001600160a01b0391821691161415610fa157601654610f9a9083611e42565b9150610fca565b6003546004546001600160a01b0390811691161415610fca57601654610fc79082611e42565b90505b42600655600254610fe5906001600160a01b031684846119eb565b600354610ffc906001600160a01b031684836119eb565b90935091506110139050565b506000928392509050565b9091565b6001546001600160a01b031633146110415760405162461bcd60e51b815260040161079b90611dde565b61104b6000611a53565b565b60008061105c42600654611aa5565b92915050565b333b156110dd573360009081526010602052604090205460ff166110dd5760405162461bcd60e51b815260206004820152602c60248201527f5374616b696e67526577617264733a20436f6e7472616374206d75737420626560448201526b081dda1a5d195b1a5cdd195960a21b606482015260840161079b565b600260005414156111005760405162461bcd60e51b815260040161079b90611da7565b60026000553361110e61149d565b600d55600c5561111c61104d565b600b556001600160a01b0381161561117a57611137816106a1565b6001600160a01b0383166000908152601360209081526040808320601483528184209490945593909255600c546011835283822055600d54601290925291909120555b600082116111bb5760405162461bcd60e51b815260206004820152600e60248201526d043616e6e6f74207374616b6520360941b604482015260640161079b565b6016546111c890836119df565b601655336000908152601560205260409020546111e590836119df565b33600081815260156020526040902091909155600454611212916001600160a01b03909116903085611abb565b60405182815233907f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d90602001610df7565b6001546000906001600160a01b031633146112715760405162461bcd60e51b815260040161079b90611dde565b813b6112da5760405162461bcd60e51b815260206004820152603260248201527f5374616b696e67526577617264733a2041646472657373206d757374206265206044820152716120636f6e7472616374206164647265737360701b606482015260840161079b565b6001600160a01b03821660009081526010602052604090205460ff16156113585760405162461bcd60e51b815260206004820152602c60248201527f5374616b696e67526577617264733a20436f6e747261637420616c726561647960448201526b081dda1a5d195b1a5cdd195960a21b606482015260840161079b565b6001600160a01b038216600081815260106020526040808220805460ff19166001179055517ffbd3cde7ff522a917e485c8ed2a6e87590887ab399f5ac312307903f498543079190a2506001919050565b6001546000906001600160a01b031633146113d65760405162461bcd60e51b815260040161079b90611dde565b6001600160a01b03821660009081526010602052604090205460ff1661144f5760405162461bcd60e51b815260206004820152602860248201527f5374616b696e67526577617264733a20436f6e7472616374206e6f74207768696044820152671d195b1a5cdd195960c21b606482015260840161079b565b6001600160a01b038216600081815260106020526040808220805460ff19169055517f8e81447740597754af5db3e176253a36f7981a9549f48ace3f0cb233913f9d859190a2506001919050565b600080601654600014156114b7575050600c54600d549091565b60075442101561155c57600061151561150c60165461071a670de0b6b3a76400006115066114f26005546008546119c790919063ffffffff16565b611506600b5461150061104d565b906119b4565b906119c7565b600c54906119df565b9050600061155161154860165461071a670de0b6b3a76400006115066114f26005546009546119c790919063ffffffff16565b600d54906119df565b919491935090915050565b600754600b54101561162d5760006115d161159360165461071a670de0b6b3a764000061150660085461150660075461150061104d565b61072061150c60165461071a670de0b6b3a76400006115066115c26005546008546119c790919063ffffffff16565b600b54600754611506916119b4565b905060006115516115fe60165461071a670de0b6b3a764000061150660095461150660075461150061104d565b61072061154860165461071a670de0b6b3a76400006115066115c26005546009546119c790919063ffffffff16565b600061165861150c60165461071a670de0b6b3a7640000611506600854611506600b5461150061104d565b9050600061155161154860165461071a670de0b6b3a7640000611506600954611506600b5461150061104d565b61168f6002610778565b3360009081526015602052604090205461104b90610c3d565b6001546001600160a01b031633146116d25760405162461bcd60e51b815260040161079b90611dde565b6001600160a01b0381166117375760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161079b565b61174081611a53565b50565b600260005414156117665760405162461bcd60e51b815260040161079b90611da7565b60026000553361177461149d565b600d55600c5561178261104d565b600b556001600160a01b038116156117e05761179d816106a1565b6001600160a01b0383166000908152601360209081526040808320601483528184209490945593909255600c546011835283822055600d54601290925291909120555b6002546004546001600160a01b03908116911614156118de5733600090815260136020526040902054806118505760405162461bcd60e51b81526020600482015260176024820152761cdd185ad9481859191c995cdcc81b9bdd08199bdd5b99604a1b604482015260640161079b565b3360009081526013602052604081205560165461186d90826119df565b6016553360009081526015602052604090205461188a90826119df565b33600081815260156020526040908190209290925590517f6675fb32d259af2b7287aeeead9dc867fe8ca2cf653265dfadd302512ab59f06906118d09084815260200190565b60405180910390a2506119ac565b6003546004546001600160a01b039081169116141561196b57336000908152601460205260409020548061194e5760405162461bcd60e51b81526020600482015260176024820152761cdd185ad9481859191c995cdcc81b9bdd08199bdd5b99604a1b604482015260640161079b565b3360009081526014602052604081205560165461186d90826119df565b60405162461bcd60e51b81526020600482015260166024820152751cdd185ada5b99d51bdad95b881b9bdd08199bdd5b9960521b604482015260640161079b565b506001600055565b60006119c08284611e42565b9392505050565b60006119c08284611e59565b60006119c08284611e78565b60006119c08284611e9a565b6040516001600160a01b038316602482015260448101829052611a4e90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611af9565b505050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000818310611ab457816119c0565b5090919050565b6040516001600160a01b0380851660248301528316604482015260648101829052611af39085906323b872dd60e01b90608401611a17565b50505050565b6000611b4e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611bcb9092919063ffffffff16565b805190915015611a4e5780806020019051810190611b6c9190611eb2565b611a4e5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161079b565b6060611bda8484600085611be2565b949350505050565b606082471015611c435760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161079b565b843b611c915760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161079b565b600080866001600160a01b03168587604051611cad9190611f00565b60006040518083038185875af1925050503d8060008114611cea576040519150601f19603f3d011682016040523d82523d6000602084013e611cef565b606091505b5091509150611cff828286611d0a565b979650505050505050565b60608315611d195750816119c0565b825115611d295782518084602001fd5b8160405162461bcd60e51b815260040161079b9190611f1c565b600060208284031215611d5557600080fd5b81356001600160a01b03811681146119c057600080fd5b600060208284031215611d7e57600080fd5b5035919050565b60008060408385031215611d9857600080fd5b50508035926020909101359150565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215611e2557600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600082821015611e5457611e54611e2c565b500390565b6000816000190483118215151615611e7357611e73611e2c565b500290565b600082611e9557634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115611ead57611ead611e2c565b500190565b600060208284031215611ec457600080fd5b815180151581146119c057600080fd5b60005b83811015611eef578181015183820152602001611ed7565b83811115611af35750506000910152565b60008251611f12818460208701611ed4565b9190910192915050565b6020815260008251806020840152611f3b816040850160208701611ed4565b601f01601f1916919091016040019291505056fea2646970667358221220034439e28b00c5c551f82e972b4ee2668b27e16ee354ffcb50446d2ff07f9be064736f6c63430008090033';

export class StakingRewardsV2__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _rewardsTokenDPX: string,
    _rewardsTokenRDPX: string,
    _stakingToken: string,
    _rewardsDuration: BigNumberish,
    _boostedTimePeriod: BigNumberish,
    _boost: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<StakingRewardsV2> {
    return super.deploy(
      _rewardsTokenDPX,
      _rewardsTokenRDPX,
      _stakingToken,
      _rewardsDuration,
      _boostedTimePeriod,
      _boost,
      overrides || {}
    ) as Promise<StakingRewardsV2>;
  }
  getDeployTransaction(
    _rewardsTokenDPX: string,
    _rewardsTokenRDPX: string,
    _stakingToken: string,
    _rewardsDuration: BigNumberish,
    _boostedTimePeriod: BigNumberish,
    _boost: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _rewardsTokenDPX,
      _rewardsTokenRDPX,
      _stakingToken,
      _rewardsDuration,
      _boostedTimePeriod,
      _boost,
      overrides || {}
    );
  }
  attach(address: string): StakingRewardsV2 {
    return super.attach(address) as StakingRewardsV2;
  }
  connect(signer: Signer): StakingRewardsV2__factory {
    return super.connect(signer) as StakingRewardsV2__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingRewardsV2Interface {
    return new utils.Interface(_abi) as StakingRewardsV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StakingRewardsV2 {
    return new Contract(address, _abi, signerOrProvider) as StakingRewardsV2;
  }
}
