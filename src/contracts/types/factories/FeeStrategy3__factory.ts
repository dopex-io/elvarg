/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { FeeStrategy3, FeeStrategy3Interface } from '../FeeStrategy3';

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'newFee',
        type: 'uint256',
      },
    ],
    name: 'PurchaseFeePercentageUpdate',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'newFee',
        type: 'uint256',
      },
    ],
    name: 'SettlementFeePercentageUpdate',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'calculatePurchaseFees',
    outputs: [
      {
        internalType: 'uint256',
        name: 'finalFee',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'calculateSettlementFees',
    outputs: [
      {
        internalType: 'uint256',
        name: 'finalFee',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'purchaseFeePercentage',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'settlementFeePercentage',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'newFee',
        type: 'uint256',
      },
    ],
    name: 'updatePurchaseFeePercentage',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'newFee',
        type: 'uint256',
      },
    ],
    name: 'updateSettlementFeePercentage',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x6080604052629896806001556298968060025534801561001e57600080fd5b506100283361002d565b61007d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6104af8061008c6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638da5cb5b116100665780638da5cb5b146100f4578063e8468ee41461010f578063f2fde38b14610122578063f3fa349514610135578063f72bf8fe1461013e57600080fd5b806329520cae146100985780633df8cd72146100c05780636efb0961146100d7578063715018a6146100ea575b600080fd5b6100ab6100a6366004610380565b610151565b60405190151581526020015b60405180910390f35b6100c960015481565b6040519081526020016100b7565b6100ab6100e5366004610380565b6101c6565b6100f2610226565b005b6000546040516001600160a01b0390911681526020016100b7565b6100c961011d366004610399565b61025c565b6100f26101303660046103c5565b610284565b6100c960025481565b6100c961014c366004610399565b61031f565b600080546001600160a01b031633146101855760405162461bcd60e51b815260040161017c906103f5565b60405180910390fd5b60018290556040518281527f88c8f67db38a241af42dba37213346faea29bb6f89bce646dbcd9f99ee352690906020015b60405180910390a1506001919050565b600080546001600160a01b031633146101f15760405162461bcd60e51b815260040161017c906103f5565b60028290556040518281527f0e8e71e7bd900df8f81533097de2d408d5ba1e61b99e7c72aea4bf24c766ed0e906020016101b6565b6000546001600160a01b031633146102505760405162461bcd60e51b815260040161017c906103f5565b61025a6000610330565b565b60006402540be40082600154610272919061042a565b61027c9190610457565b949350505050565b6000546001600160a01b031633146102ae5760405162461bcd60e51b815260040161017c906103f5565b6001600160a01b0381166103135760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161017c565b61031c81610330565b50565b6000600254600061027c919061042a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561039257600080fd5b5035919050565b6000806000606084860312156103ae57600080fd5b505081359360208301359350604090920135919050565b6000602082840312156103d757600080fd5b81356001600160a01b03811681146103ee57600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600081600019048311821515161561045257634e487b7160e01b600052601160045260246000fd5b500290565b60008261047457634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212202dc3950f40c538e4b695274d599022f6fce78b3f71daa8e6390ed1a61504e46564736f6c63430008090033';

export class FeeStrategy3__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FeeStrategy3> {
    return super.deploy(overrides || {}) as Promise<FeeStrategy3>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): FeeStrategy3 {
    return super.attach(address) as FeeStrategy3;
  }
  connect(signer: Signer): FeeStrategy3__factory {
    return super.connect(signer) as FeeStrategy3__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FeeStrategy3Interface {
    return new utils.Interface(_abi) as FeeStrategy3Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FeeStrategy3 {
    return new Contract(address, _abi, signerOrProvider) as FeeStrategy3;
  }
}
