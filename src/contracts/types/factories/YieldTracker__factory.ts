/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { YieldTracker, YieldTrackerInterface } from '../YieldTracker';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_yieldToken',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'Claim',
    type: 'event',
  },
  {
    inputs: [],
    name: 'PRECISION',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_receiver',
        type: 'address',
      },
    ],
    name: 'claim',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
    ],
    name: 'claimable',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'claimableReward',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'cumulativeRewardPerToken',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'distributor',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getTokensPerInterval',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'gov',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'previousCumulatedRewardPerToken',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_distributor',
        type: 'address',
      },
    ],
    name: 'setDistributor',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_gov',
        type: 'address',
      },
    ],
    name: 'setGov',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
    ],
    name: 'updateRewards',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_token',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256',
      },
    ],
    name: 'withdrawToken',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'yieldToken',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b506040516111913803806111918339818101604052602081101561003357600080fd5b50516001600081905580546001600160a01b03199081163317909155600280546001600160a01b039093169290911691909117905561111a806100776000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806375619ab51161008c578063bfe1092811610066578063bfe109281461023b578063cfad57a214610243578063e950342514610269578063f5fc50761461028f576100ea565b806375619ab51461020557806376d5de851461022b578063aaf5eb6814610233576100ea565b80632459f51d116100c85780632459f51d1461018b578063402914f51461019357806344a08411146101b95780635fd61965146101df576100ea565b806301e33667146100ef57806312d43a511461012757806321c0b3421461014b575b600080fd5b6101256004803603606081101561010557600080fd5b506001600160a01b03813581169160208101359091169060400135610297565b005b61012f610309565b604080516001600160a01b039092168252519081900360200190f35b6101796004803603604081101561016157600080fd5b506001600160a01b0381358116916020013516610318565b60408051918252519081900360200190f35b61017961046b565b610179600480360360208110156101a957600080fd5b50356001600160a01b03166104e6565b610179600480360360208110156101cf57600080fd5b50356001600160a01b031661072d565b610125600480360360208110156101f557600080fd5b50356001600160a01b031661073f565b6101256004803603602081101561021b57600080fd5b50356001600160a01b0316610a1a565b61012f610a95565b610179610aa4565b61012f610ab5565b6101256004803603602081101561025957600080fd5b50356001600160a01b0316610ac4565b6101796004803603602081101561027f57600080fd5b50356001600160a01b0316610b3f565b610179610b51565b6001546001600160a01b031633146102f0576040805162461bcd60e51b81526020600482015260176024820152762cb4b2b6322a3930b1b5b2b91d103337b93134b23232b760491b604482015290519081900360640190fd5b6103046001600160a01b0384168383610b57565b505050565b6001546001600160a01b031681565b6002546000906001600160a01b03163314610374576040805162461bcd60e51b81526020600482015260176024820152762cb4b2b6322a3930b1b5b2b91d103337b93134b23232b760491b604482015290519081900360640190fd5b61037d8361073f565b6001600160a01b0380841660009081526005602090815260408083208054908490556003548251633b83c43960e11b815230600482015292519195169263770788729260248082019391829003018186803b1580156103db57600080fd5b505afa1580156103ef573d6000803e3d6000fd5b505050506040513d602081101561040557600080fd5b5051905061041d6001600160a01b0382168584610b57565b604080516001600160a01b03871681526020810184905281517f47cee97cb7acd717b3c0aa1435d004cd5b3c8c57d70dbceb4e4458bbd60e39d4929181900390910190a15090505b92915050565b60035460408051629c368960e61b815230600482015290516000926001600160a01b03169163270da240916024808301926020929190829003018186803b1580156104b557600080fd5b505afa1580156104c9573d6000803e3d6000fd5b505050506040513d60208110156104df57600080fd5b5051905090565b60025460408051636021726760e01b81526001600160a01b0384811660048301529151600093849316916360217267916024808301926020929190829003018186803b15801561053557600080fd5b505afa158015610549573d6000803e3d6000fd5b505050506040513d602081101561055f57600080fd5b50519050806105885750506001600160a01b038116600090815260056020526040902054610728565b60035460408051635bfdd4fb60e11b8152306004820152905160009261061b926c0c9f2c9cd04674edea40000000926001600160a01b039092169163b7fba9f691602480820192602092909190829003018186803b1580156105e957600080fd5b505afa1580156105fd573d6000803e3d6000fd5b505050506040513d602081101561061357600080fd5b505190610ba9565b90506000600260009054906101000a90046001600160a01b03166001600160a01b031663817b1cd26040518163ffffffff1660e01b815260040160206040518083038186803b15801561066d57600080fd5b505afa158015610681573d6000803e3d6000fd5b505050506040513d602081101561069757600080fd5b5051905060006106b36106aa8484610c09565b60045490610c4b565b6001600160a01b03871660009081526006602052604090205490915061072190610702906c0c9f2c9cd04674edea40000000906106fc906106f5908690610ca5565b8890610ba9565b90610c09565b6001600160a01b03881660009081526005602052604090205490610c4b565b9450505050505b919050565b60066020526000908152604090205481565b60026000541415610797576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b600260009081556003546001600160a01b03161561082e57600360009054906101000a90046001600160a01b03166001600160a01b031663e4fc6b6d6040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156107ff57600080fd5b505af1158015610813573d6000803e3d6000fd5b505050506040513d602081101561082957600080fd5b505190505b60048054600254604080516340bd8e6960e11b8152905192936000936001600160a01b039093169263817b1cd2928083019260209291829003018186803b15801561087857600080fd5b505afa15801561088c573d6000803e3d6000fd5b505050506040513d60208110156108a257600080fd5b5051905080158015906108b55750600083115b156108e7576108df6108d8826106fc866c0c9f2c9cd04674edea40000000610ba9565b8390610c4b565b600481905591505b816108f457505050610a12565b6001600160a01b03841615610a0e5760025460408051636021726760e01b81526001600160a01b03878116600483015291516000939290921691636021726791602480820192602092909190829003018186803b15801561095457600080fd5b505afa158015610968573d6000803e3d6000fd5b505050506040513d602081101561097e57600080fd5b50516001600160a01b0386166000908152600660205260408120549192506109e36109c46c0c9f2c9cd04674edea400000006106fc6109bd8987610ca5565b8790610ba9565b6001600160a01b03891660009081526005602052604090205490610c4b565b6001600160a01b03881660009081526005602090815260408083209390935560069052208590555050505b5050505b506001600055565b6001546001600160a01b03163314610a73576040805162461bcd60e51b81526020600482015260176024820152762cb4b2b6322a3930b1b5b2b91d103337b93134b23232b760491b604482015290519081900360640190fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6002546001600160a01b031681565b6c0c9f2c9cd04674edea4000000081565b6003546001600160a01b031681565b6001546001600160a01b03163314610b1d576040805162461bcd60e51b81526020600482015260176024820152762cb4b2b6322a3930b1b5b2b91d103337b93134b23232b760491b604482015290519081900360640190fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b60056020526000908152604090205481565b60045481565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610304908490610ce7565b600082610bb857506000610465565b82820282848281610bc557fe5b0414610c025760405162461bcd60e51b815260040180806020018281038252602181526020018061109a6021913960400191505060405180910390fd5b9392505050565b6000610c0283836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610d98565b600082820183811015610c02576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6000610c0283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610e3a565b6060610d3c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610e949092919063ffffffff16565b80519091501561030457808060200190516020811015610d5b57600080fd5b50516103045760405162461bcd60e51b815260040180806020018281038252602a8152602001806110bb602a913960400191505060405180910390fd5b60008183610e245760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610de9578181015183820152602001610dd1565b50505050905090810190601f168015610e165780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581610e3057fe5b0495945050505050565b60008184841115610e8c5760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610de9578181015183820152602001610dd1565b505050900390565b6060610ea38484600085610eab565b949350505050565b606082471015610eec5760405162461bcd60e51b81526004018080602001828103825260268152602001806110746026913960400191505060405180910390fd5b610ef585611007565b610f46576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b60208310610f855780518252601f199092019160209182019101610f66565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114610fe7576040519150601f19603f3d011682016040523d82523d6000602084013e610fec565b606091505b5091509150610ffc82828661100d565b979650505050505050565b3b151590565b6060831561101c575081610c02565b82511561102c5782518084602001fd5b60405162461bcd60e51b8152602060048201818152845160248401528451859391928392604401919085019080838360008315610de9578181015183820152602001610dd156fe416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f775361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a2646970667358221220de3c4e576bd45b8fa0929e0cd6021cdee96cd4c766a8d07aff0c5bd4c47c84f664736f6c634300060c0033';

export class YieldTracker__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _yieldToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<YieldTracker> {
    return super.deploy(_yieldToken, overrides || {}) as Promise<YieldTracker>;
  }
  getDeployTransaction(
    _yieldToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_yieldToken, overrides || {});
  }
  attach(address: string): YieldTracker {
    return super.attach(address) as YieldTracker;
  }
  connect(signer: Signer): YieldTracker__factory {
    return super.connect(signer) as YieldTracker__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): YieldTrackerInterface {
    return new utils.Interface(_abi) as YieldTrackerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): YieldTracker {
    return new Contract(address, _abi, signerOrProvider) as YieldTracker;
  }
}
