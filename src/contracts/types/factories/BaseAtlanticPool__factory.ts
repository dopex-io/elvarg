/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  BaseAtlanticPool,
  BaseAtlanticPoolInterface,
} from '../BaseAtlanticPool';

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'booleanValue',
        type: 'bool',
      },
    ],
    name: 'LogNotice',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'startingIndex',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'strike',
        type: 'uint256',
      },
    ],
    name: 'getCumulativeLiquidityForStrike',
    outputs: [
      {
        internalType: 'uint256',
        name: 'cumulativeLiquidity',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_node',
        type: 'uint256',
      },
    ],
    name: 'getNextNode',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_node',
        type: 'uint256',
      },
    ],
    name: 'getNode',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_node',
        type: 'uint256',
      },
    ],
    name: 'getPreviousNode',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_structure',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_value',
        type: 'uint256',
      },
    ],
    name: 'getSortedSpot',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_id',
        type: 'uint256',
      },
    ],
    name: 'getValue',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_node',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_new',
        type: 'uint256',
      },
    ],
    name: 'insertAfter',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_node',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_new',
        type: 'uint256',
      },
    ],
    name: 'insertBefore',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'listExists',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_node',
        type: 'uint256',
      },
    ],
    name: 'nodeExists',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'popBack',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'popFront',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_node',
        type: 'uint256',
      },
    ],
    name: 'pushBack',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_node',
        type: 'uint256',
      },
    ],
    name: 'pushFront',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_node',
        type: 'uint256',
      },
    ],
    name: 'remove',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sizeOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'strikes',
    outputs: [
      {
        internalType: 'uint256',
        name: 'strike',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'liquidity',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'cumulativeLiquidity',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'putsWritten',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'premiumCollected',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'fundingCollected',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'activeCollateral',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405260fa60035534801561001557600080fd5b50610afb806100256000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80635e77a33c116100a257806384d9fedd1161007157806384d9fedd146102a657806392c2cd8c146102ae578063ad13db5a146102c1578063c0f0eddc146102d4578063eabc709c146102e757600080fd5b80635e77a33c146101d65780636d902bfb146101e9578063792417b114610213578063832f799c1461029357600080fd5b80632c64bf58116100de5780632c64bf58146101685780634770dfd7146101805780634cc82215146101935780634f0f4aa9146101a657600080fd5b80630e15dc89146101105780630ff4c9161461012b578063107dfb641461014b5780631425c77d14610155575b600080fd5b6101186102fa565b6040519081526020015b60405180910390f35b6101186101393660046109b2565b60009081526020819052604090205490565b61015361030a565b005b6101186101633660046109cb565b610349565b610170610402565b6040519015158152602001610122565b61015361018e3660046109b2565b61040e565b6101536101a13660046109b2565b61043f565b6101b96101b43660046109b2565b610476565b604080519315158452602084019290925290820152606001610122565b6101536101e43660046109cb565b610492565b6101fc6101f73660046109b2565b6104c4565b604080519215158352602083019190915201610122565b61025e6102213660046109b2565b6000602081905290815260409020805460018201546002830154600384015460048501546005860154600690960154949593949293919290919087565b604080519788526020880196909652948601939093526060850191909152608084015260a083015260c082015260e001610122565b6101186102a13660046109ed565b6104db565b6101536104f0565b6101fc6102bc3660046109b2565b61050b565b6101536102cf3660046109b2565b610519565b6101536102e23660046109cb565b610533565b6101706102f53660046109b2565b61054e565b600061030560015490565b905090565b600080516020610aa68339815191526000610325600161055b565b11610331576000610334565b60015b604051901515815260200160405180910390a1565b6000828152602081905260408120546103a25760405162461bcd60e51b8152602060048201526016602482015275092dcecc2d8d2c840e6e8c2e4e8d2dcce40d2dcc8caf60531b60448201526064015b60405180910390fd5b6003546103af9083610a25565b156103fc5760405162461bcd60e51b815260206004820152601b60248201527f496e76616c6964207374617274696e67206d617820737472696b6500000000006044820152606401610399565b92915050565b60006103056001610568565b600080516020610aa68339815191526104286001836105be565b60405190151581526020015b60405180910390a150565b600080516020610aa6833981519152600061045b6001846105cc565b11610467576000610428565b60405160018152602001610434565b60008080610485600185610666565b9250925092509193909250565b600080516020610aa68339815191526104ad600184846106b9565b604051901515815260200160405180910390a15050565b6000806104d26001846106d0565b91509150915091565b60006104e9600184846106ea565b9392505050565b600080516020610aa6833981519152600061032560016107c4565b6000806104d26001846107d1565b600080516020610aa68339815191526104286001836107e0565b600080516020610aa68339815191526104ad600184846107ee565b60006103fc6001836107fd565b60006103fc826000610881565b600080805260018201602090815260408083209091528120541515806105a95750600080805260018084016020908152604080842092845291905290205415155b156105b657506001919050565b506000919050565b60006104e98383600161089e565b60008115806105e257506105e083836107fd565b155b156105ef575060006103fc565b6000828152600184810160209081526040808420848052909152808320548284529220546106219286929091906108ad565b6000828152600184810160209081526040808420848052909152808320839055818352822082905584549091859161065a908490610a5d565b90915550919392505050565b600080600061067585856107fd565b610687575060009150819050806106b2565b5050506000818152600183810160209081526040808420848052909152808320548284529220549091905b9250925092565b60006106c884848460016108e2565b949350505050565b6000806106df8484600161096b565b915091509250929050565b60006106f4845490565b610700575060006104e9565b600061070f856000600161096b565b9150505b801580159061079d57506040516307fa648b60e11b8152600481018290526001906001600160a01b03861690630ff4c9169060240160206040518083038186803b15801561076057600080fd5b505afa158015610774573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107989190610a74565b841014155b156106c8576000908152600180860160209081526040808420928452919052902054610713565b60006103fc826001610881565b6000806106df8484600061096b565b60006104e98383600061089e565b60006106c884848460006108e2565b6000818152600183016020908152604080832083805290915281205415801561084057506000828152600180850160209081526040808420928452919052902054155b15610879576000808052600180850160209081526040808420928452919052902054821415610871575060016103fc565b5060006103fc565b5060016103fc565b6000806108908460008561096b565b91506106c8905084826105cc565b60006106c884600085856108e2565b600082815260019094016020818152604080872093158088529382528087208690559486529081528385209115855252912055565b60006108ee85846107fd565b158015610900575061090085856107fd565b156109605760008481526001860160209081526040808320851515845290915290205461092f868686866108ad565b61093b868583866108ad565b60018660000160008282546109509190610a8d565b90915550600192506106c8915050565b506000949350505050565b60008061097885856107fd565b610987575060009050806109aa565b505060008281526001848101602090815260408084208515158552909152909120545b935093915050565b6000602082840312156109c457600080fd5b5035919050565b600080604083850312156109de57600080fd5b50508035926020909101359150565b60008060408385031215610a0057600080fd5b82356001600160a01b0381168114610a1757600080fd5b946020939093013593505050565b600082610a4257634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052601160045260246000fd5b600082821015610a6f57610a6f610a47565b500390565b600060208284031215610a8657600080fd5b5051919050565b60008219821115610aa057610aa0610a47565b50019056febe4a283daacbc72784e9fd4aa2cf5fb22d511dc8489876945ab062d977ef69bca264697066735822122030aae02d71d2a221bbdfb23bab1aee379dad007abc89685ce0ccc86cd290efaf64736f6c63430008090033';

export class BaseAtlanticPool__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BaseAtlanticPool> {
    return super.deploy(overrides || {}) as Promise<BaseAtlanticPool>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BaseAtlanticPool {
    return super.attach(address) as BaseAtlanticPool;
  }
  connect(signer: Signer): BaseAtlanticPool__factory {
    return super.connect(signer) as BaseAtlanticPool__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BaseAtlanticPoolInterface {
    return new utils.Interface(_abi) as BaseAtlanticPoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BaseAtlanticPool {
    return new Contract(address, _abi, signerOrProvider) as BaseAtlanticPool;
  }
}
