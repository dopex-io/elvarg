/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { YieldToken, YieldTokenInterface } from '../YieldToken';

const _abi = [
  {
    inputs: [
      {
        internalType: 'string',
        name: '_name',
        type: 'string',
      },
      {
        internalType: 'string',
        name: '_symbol',
        type: 'string',
      },
      {
        internalType: 'uint256',
        name: '_initialSupply',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
    ],
    name: 'addAdmin',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
    ],
    name: 'addNonStakingAccount',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'admins',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_spender',
        type: 'address',
      },
    ],
    name: 'allowance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'allowances',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'balances',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_receiver',
        type: 'address',
      },
    ],
    name: 'claim',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'decimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'gov',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'inWhitelistMode',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'nonStakingAccounts',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'nonStakingSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_receiver',
        type: 'address',
      },
    ],
    name: 'recoverClaim',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
    ],
    name: 'removeAdmin',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
    ],
    name: 'removeNonStakingAccount',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_gov',
        type: 'address',
      },
    ],
    name: 'setGov',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_inWhitelistMode',
        type: 'bool',
      },
    ],
    name: 'setInWhitelistMode',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: '_name',
        type: 'string',
      },
      {
        internalType: 'string',
        name: '_symbol',
        type: 'string',
      },
    ],
    name: 'setInfo',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_handler',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: '_isWhitelisted',
        type: 'bool',
      },
    ],
    name: 'setWhitelistedHandler',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: '_yieldTrackers',
        type: 'address[]',
      },
    ],
    name: 'setYieldTrackers',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
    ],
    name: 'stakedBalance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalStaked',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_recipient',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256',
      },
    ],
    name: 'transfer',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_sender',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_recipient',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'whitelistedHandlers',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_token',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256',
      },
    ],
    name: 'withdrawToken',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'yieldTrackers',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040523480156200001157600080fd5b506040516200221f3803806200221f833981810160405260608110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82516401000000008111828201881017156200008957600080fd5b82525081516020918201929091019080838360005b83811015620000b85781810151838201526020016200009e565b50505050905090810190601f168015620000e65780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200010a57600080fd5b9083019060208201858111156200012057600080fd5b82516401000000008111828201881017156200013b57600080fd5b82525081516020918201929091019080838360005b838110156200016a57818101518382015260200162000150565b50505050905090810190601f168015620001985780820380516001836020036101000a031916815260200191505b506040526020908101518551909350620001b992506000918601906200044a565b508151620001cf9060019060208501906200044a565b50600480546001600160a01b031916339081179091556000818152600960205260409020805460ff191660011790556200020a908262000213565b505050620004e6565b6001600160a01b0382166200025a5760405162461bcd60e51b8152600401808060200182810382526024815260200180620021fb6024913960400191505060405180910390fd5b620002658262000349565b6200028181600254620003e860201b6200124a1790919060201c565b6002556001600160a01b038216600090815260056020908152604090912054620002b69183906200124a620003e8821b17901c565b6001600160a01b03831660009081526005602090815260408083209390935560089052205460ff161562000304576200030081600354620003e860201b6200124a1790919060201c565b6003555b6040805182815290516001600160a01b038416916000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b60005b600754811015620003e4576000600782815481106200036757fe5b600091825260208220015460408051635fd6196560e01b81526001600160a01b03878116600483015291519190921693508392635fd61965926024808201939182900301818387803b158015620003bd57600080fd5b505af1158015620003d2573d6000803e3d6000fd5b5050600190930192506200034c915050565b5050565b60008282018381101562000443576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200048d57805160ff1916838001178555620004bd565b82800160010185558215620004bd579182015b82811115620004bd578251825591602001919060010190620004a0565b50620004cb929150620004cf565b5090565b5b80821115620004cb5760008155600101620004d0565b611d0580620004f66000396000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c806355b6ed5c1161010f578063996f11ee116100a2578063cfad57a211610071578063cfad57a2146107ac578063d92fc87e146107d2578063dd62ed3e14610800578063fb30d9161461082e576101f0565b8063996f11ee1461061d578063a9059cbb1461064b578063a923fc4014610677578063c93be636146107a4576101f0565b806370a08231116100de57806370a08231146105c1578063817b1cd2146105e75780639554381a146105ef57806395d89b4114610615576101f0565b806355b6ed5c14610521578063602172671461054f5780636228907714610575578063704802751461059b576101f0565b8063276eab4e1161018757806336300051116101565780633630005114610499578063429b62e5146104bf5780634cb5bbe3146104e557806352cd38d914610504576101f0565b8063276eab4e146103aa57806327e235e31461044d578063293d698714610473578063313ce5671461047b576101f0565b80631785f53c116101c35780631785f53c1461030e57806318160ddd146103345780631e83409a1461034e57806323b872dd14610374576101f0565b806301e33667146101f557806306fdde031461022d578063095ea7b3146102aa57806312d43a51146102ea575b600080fd5b61022b6004803603606081101561020b57600080fd5b506001600160a01b03813581169160208101359091169060400135610854565b005b6102356108ba565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561026f578181015183820152602001610257565b50505050905090810190601f16801561029c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102d6600480360360408110156102c057600080fd5b506001600160a01b038135169060200135610948565b604080519115158252519081900360200190f35b6102f261095e565b604080516001600160a01b039092168252519081900360200190f35b61022b6004803603602081101561032457600080fd5b50356001600160a01b031661096d565b61033c6109db565b60408051918252519081900360200190f35b61022b6004803603602081101561036457600080fd5b50356001600160a01b03166109e1565b6102d66004803603606081101561038a57600080fd5b506001600160a01b03813581169160208101359091169060400135610a98565b61022b600480360360208110156103c057600080fd5b8101906020810181356401000000008111156103db57600080fd5b8201836020820111156103ed57600080fd5b8035906020019184602083028401116401000000008311171561040f57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550610b08945050505050565b61033c6004803603602081101561046357600080fd5b50356001600160a01b0316610b68565b6102d6610b7a565b610483610b83565b6040805160ff9092168252519081900360200190f35b6102d6600480360360208110156104af57600080fd5b50356001600160a01b0316610b88565b6102d6600480360360208110156104d557600080fd5b50356001600160a01b0316610b9d565b61022b600480360360208110156104fb57600080fd5b50351515610bb2565b6102f26004803603602081101561051a57600080fd5b5035610c12565b61033c6004803603604081101561053757600080fd5b506001600160a01b0381358116916020013516610c39565b61033c6004803603602081101561056557600080fd5b50356001600160a01b0316610c56565b61022b6004803603602081101561058b57600080fd5b50356001600160a01b0316610c9f565b61022b600480360360208110156105b157600080fd5b50356001600160a01b0316610d92565b61033c600480360360208110156105d757600080fd5b50356001600160a01b0316610e03565b61033c610e1e565b6102d66004803603602081101561060557600080fd5b50356001600160a01b0316610e3c565b610235610e51565b61022b6004803603604081101561063357600080fd5b506001600160a01b0381358116916020013516610eab565b6102d66004803603604081101561066157600080fd5b506001600160a01b038135169060200135610fb2565b61022b6004803603604081101561068d57600080fd5b8101906020810181356401000000008111156106a857600080fd5b8201836020820111156106ba57600080fd5b803590602001918460018302840111640100000000831117156106dc57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929594936020810193503591505064010000000081111561072f57600080fd5b82018360208201111561074157600080fd5b8035906020019184600183028401116401000000008311171561076357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610fbf945050505050565b61033c611033565b61022b600480360360208110156107c257600080fd5b50356001600160a01b0316611039565b61022b600480360360408110156107e857600080fd5b506001600160a01b03813516906020013515156110a8565b61033c6004803603604081101561081657600080fd5b506001600160a01b0381358116916020013516611120565b61022b6004803603602081101561084457600080fd5b50356001600160a01b031661114b565b6004546001600160a01b031633146108a1576040805162461bcd60e51b81526020600482015260156024820152600080516020611c85833981519152604482015290519081900360640190fd5b6108b56001600160a01b03841683836112a4565b505050565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156109405780601f1061091557610100808354040283529160200191610940565b820191906000526020600020905b81548152906001019060200180831161092357829003601f168201915b505050505081565b60006109553384846112f6565b50600192915050565b6004546001600160a01b031681565b6004546001600160a01b031633146109ba576040805162461bcd60e51b81526020600482015260156024820152600080516020611c85833981519152604482015290519081900360640190fd5b6001600160a01b03166000908152600960205260409020805460ff19169055565b60025481565b60005b600754811015610a94576000600782815481106109fd57fe5b6000918252602080832090910154604080516310e059a160e11b81523360048201526001600160a01b038881166024830152915191909216945084936321c0b34293604480850194919392918390030190829087803b158015610a5f57600080fd5b505af1158015610a73573d6000803e3d6000fd5b505050506040513d6020811015610a8957600080fd5b5050506001016109e4565b5050565b600080610ae3836040518060600160405280602d8152602001611c32602d91396001600160a01b038816600090815260066020908152604080832033845290915290205491906113e2565b9050610af08533836112f6565b610afb858585611479565b60019150505b9392505050565b6004546001600160a01b03163314610b55576040805162461bcd60e51b81526020600482015260156024820152600080516020611c85833981519152604482015290519081900360640190fd5b8051610a94906007906020840190611a09565b60056020526000908152604090205481565b600a5460ff1681565b601281565b600b6020526000908152604090205460ff1681565b60096020526000908152604090205460ff1681565b6004546001600160a01b03163314610bff576040805162461bcd60e51b81526020600482015260156024820152600080516020611c85833981519152604482015290519081900360640190fd5b600a805460ff1916911515919091179055565b60078181548110610c1f57fe5b6000918252602090912001546001600160a01b0316905081565b600660209081526000928352604080842090915290825290205481565b6001600160a01b03811660009081526008602052604081205460ff1615610c7f57506000610c9a565b506001600160a01b0381166000908152600560205260409020545b919050565b3360009081526009602052604090205460ff16610cf1576040805162461bcd60e51b81526020600482015260156024820152600080516020611c85833981519152604482015290519081900360640190fd5b6001600160a01b03811660009081526008602052604090205460ff1615610d495760405162461bcd60e51b8152600401808060200182810382526023815260200180611b1d6023913960400191505060405180910390fd5b610d52816116a1565b6001600160a01b0381166000908152600860209081526040808320805460ff191660011790556005909152902054600354610d8c9161124a565b60035550565b6004546001600160a01b03163314610ddf576040805162461bcd60e51b81526020600482015260156024820152600080516020611c85833981519152604482015290519081900360640190fd5b6001600160a01b03166000908152600960205260409020805460ff19166001179055565b6001600160a01b031660009081526005602052604090205490565b6000610e3760035460025461173790919063ffffffff16565b905090565b60086020526000908152604090205460ff1681565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156109405780601f1061091557610100808354040283529160200191610940565b3360009081526009602052604090205460ff16610efd576040805162461bcd60e51b81526020600482015260156024820152600080516020611c85833981519152604482015290519081900360640190fd5b60005b6007548110156108b557600060078281548110610f1957fe5b6000918252602080832090910154604080516310e059a160e11b81526001600160a01b0389811660048301528881166024830152915191909216945084936321c0b34293604480850194919392918390030190829087803b158015610f7d57600080fd5b505af1158015610f91573d6000803e3d6000fd5b505050506040513d6020811015610fa757600080fd5b505050600101610f00565b6000610955338484611479565b6004546001600160a01b0316331461100c576040805162461bcd60e51b81526020600482015260156024820152600080516020611c85833981519152604482015290519081900360640190fd5b815161101f906000906020850190611a6e565b5080516108b5906001906020840190611a6e565b60035481565b6004546001600160a01b03163314611086576040805162461bcd60e51b81526020600482015260156024820152600080516020611c85833981519152604482015290519081900360640190fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6004546001600160a01b031633146110f5576040805162461bcd60e51b81526020600482015260156024820152600080516020611c85833981519152604482015290519081900360640190fd5b6001600160a01b03919091166000908152600b60205260409020805460ff1916911515919091179055565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205490565b3360009081526009602052604090205460ff1661119d576040805162461bcd60e51b81526020600482015260156024820152600080516020611c85833981519152604482015290519081900360640190fd5b6001600160a01b03811660009081526008602052604090205460ff1661120a576040805162461bcd60e51b815260206004820152601f60248201527f5969656c64546f6b656e3a205f6163636f756e74206e6f74206d61726b656400604482015290519081900360640190fd5b611213816116a1565b6001600160a01b0381166000908152600860209081526040808320805460ff191690556005909152902054600354610d8c91611737565b600082820183811015610b01576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526108b5908490611779565b6001600160a01b03831661133b5760405162461bcd60e51b8152600401808060200182810382526029815260200180611c096029913960400191505060405180910390fd5b6001600160a01b0382166113805760405162461bcd60e51b8152600401808060200182810382526027815260200180611bb86027913960400191505060405180910390fd5b6001600160a01b03808416600081815260066020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b600081848411156114715760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561143657818101518382015260200161141e565b50505050905090810190601f1680156114635780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6001600160a01b0383166114be5760405162461bcd60e51b815260040180806020018281038252602a815260200180611b68602a913960400191505060405180910390fd5b6001600160a01b0382166115035760405162461bcd60e51b8152600401808060200182810382526028815260200180611b406028913960400191505060405180910390fd5b600a5460ff161561155c57336000908152600b602052604090205460ff1661155c5760405162461bcd60e51b8152600401808060200182810382526026815260200180611c5f6026913960400191505060405180910390fd5b611565836116a1565b61156e826116a1565b6115ab816040518060600160405280602b8152602001611ca5602b91396001600160a01b03861660009081526005602052604090205491906113e2565b6001600160a01b0380851660009081526005602052604080822093909355908416815220546115da908261124a565b6001600160a01b0380841660009081526005602090815260408083209490945591861681526008909152205460ff161561161f5760035461161b9082611737565b6003555b6001600160a01b03821660009081526008602052604090205460ff16156116515760035461164d908261124a565b6003555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b60005b600754811015610a94576000600782815481106116bd57fe5b600091825260208220015460408051635fd6196560e01b81526001600160a01b03878116600483015291519190921693508392635fd61965926024808201939182900301818387803b15801561171257600080fd5b505af1158015611726573d6000803e3d6000fd5b5050600190930192506116a4915050565b6000610b0183836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506113e2565b60606117ce826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661182a9092919063ffffffff16565b8051909150156108b5578080602001905160208110156117ed57600080fd5b50516108b55760405162461bcd60e51b815260040180806020018281038252602a815260200180611bdf602a913960400191505060405180910390fd5b60606118398484600085611841565b949350505050565b6060824710156118825760405162461bcd60e51b8152600401808060200182810382526026815260200180611b926026913960400191505060405180910390fd5b61188b8561199d565b6118dc576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b6020831061191b5780518252601f1990920191602091820191016118fc565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d806000811461197d576040519150601f19603f3d011682016040523d82523d6000602084013e611982565b606091505b50915091506119928282866119a3565b979650505050505050565b3b151590565b606083156119b2575081610b01565b8251156119c25782518084602001fd5b60405162461bcd60e51b815260206004820181815284516024840152845185939192839260440191908501908083836000831561143657818101518382015260200161141e565b828054828255906000526020600020908101928215611a5e579160200282015b82811115611a5e57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190611a29565b50611a6a929150611ae8565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611aaf57805160ff1916838001178555611adc565b82800160010185558215611adc579182015b82811115611adc578251825591602001919060010190611ac1565b50611a6a929150611b07565b5b80821115611a6a5780546001600160a01b0319168155600101611ae9565b5b80821115611a6a5760008155600101611b0856fe5969656c64546f6b656e3a205f6163636f756e7420616c7265616479206d61726b65645969656c64546f6b656e3a207472616e7366657220746f20746865207a65726f20616464726573735969656c64546f6b656e3a207472616e736665722066726f6d20746865207a65726f2061646472657373416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c5969656c64546f6b656e3a20617070726f766520746f20746865207a65726f20616464726573735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565645969656c64546f6b656e3a20617070726f76652066726f6d20746865207a65726f20616464726573735969656c64546f6b656e3a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e63655969656c64546f6b656e3a206d73672e73656e646572206e6f742077686974656c69737465645969656c64546f6b656e3a20666f7262696464656e00000000000000000000005969656c64546f6b656e3a207472616e7366657220616d6f756e7420657863656564732062616c616e6365a2646970667358221220201b1353d5e300e73059cb3374ff60a19152302dfb9eb84e65afc4d28e69f3ef64736f6c634300060c00335969656c64546f6b656e3a206d696e7420746f20746865207a65726f2061646472657373';

export class YieldToken__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _name: string,
    _symbol: string,
    _initialSupply: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<YieldToken> {
    return super.deploy(
      _name,
      _symbol,
      _initialSupply,
      overrides || {}
    ) as Promise<YieldToken>;
  }
  getDeployTransaction(
    _name: string,
    _symbol: string,
    _initialSupply: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _initialSupply,
      overrides || {}
    );
  }
  attach(address: string): YieldToken {
    return super.attach(address) as YieldToken;
  }
  connect(signer: Signer): YieldToken__factory {
    return super.connect(signer) as YieldToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): YieldTokenInterface {
    return new utils.Interface(_abi) as YieldTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): YieldToken {
    return new Contract(address, _abi, signerOrProvider) as YieldToken;
  }
}
