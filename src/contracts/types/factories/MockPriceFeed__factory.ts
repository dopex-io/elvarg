/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { MockPriceFeed, MockPriceFeedInterface } from '../MockPriceFeed';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    name: 'getPrice',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'prices',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'price',
        type: 'uint256',
      },
    ],
    name: 'setPrice',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b506101d1806100206000396000f3fe608060405234801561001057600080fd5b50600436106100405760003560e01c8062e4768b146100455780632fc3a70a14610071578063cfed246b146100af575b600080fd5b61006f6100533660046100eb565b6001600160a01b03909116600090815260208190526040902055565b005b61009d61007f366004610125565b5050506001600160a01b031660009081526020819052604090205490565b60405190815260200160405180910390f35b61009d6100bd366004610179565b60006020819052908152604090205481565b80356001600160a01b03811681146100e657600080fd5b919050565b600080604083850312156100fe57600080fd5b610107836100cf565b946020939093013593505050565b803580151581146100e657600080fd5b6000806000806080858703121561013b57600080fd5b610144856100cf565b935061015260208601610115565b925061016060408601610115565b915061016e60608601610115565b905092959194509250565b60006020828403121561018b57600080fd5b610194826100cf565b939250505056fea264697066735822122065459c4e14ff5541c886cde6d6d6082d467537dcb088ed9593832f24f349642a64736f6c63430008090033';

export class MockPriceFeed__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockPriceFeed> {
    return super.deploy(overrides || {}) as Promise<MockPriceFeed>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockPriceFeed {
    return super.attach(address) as MockPriceFeed;
  }
  connect(signer: Signer): MockPriceFeed__factory {
    return super.connect(signer) as MockPriceFeed__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockPriceFeedInterface {
    return new utils.Interface(_abi) as MockPriceFeedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockPriceFeed {
    return new Contract(address, _abi, signerOrProvider) as MockPriceFeed;
  }
}
