/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  MockOptionPricing,
  MockOptionPricingInterface,
} from '../MockOptionPricing';

const _abi = [
  {
    inputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'getOptionPrice',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b5060d58061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80635b7b6d8814602d575b600080fd5b604660383660046058565b631dcd650095945050505050565b60405190815260200160405180910390f35b600080600080600060a08688031215606f57600080fd5b85358015158114607e57600080fd5b9760208701359750604087013596606081013596506080013594509250505056fea2646970667358221220d7a189049547065dcc36fac407919fc3482f45854d5a19657ef92b5d0028bd3064736f6c63430008090033';

export class MockOptionPricing__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockOptionPricing> {
    return super.deploy(overrides || {}) as Promise<MockOptionPricing>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockOptionPricing {
    return super.attach(address) as MockOptionPricing;
  }
  connect(signer: Signer): MockOptionPricing__factory {
    return super.connect(signer) as MockOptionPricing__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockOptionPricingInterface {
    return new utils.Interface(_abi) as MockOptionPricingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockOptionPricing {
    return new Contract(address, _abi, signerOrProvider) as MockOptionPricing;
  }
}
