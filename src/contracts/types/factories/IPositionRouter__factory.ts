/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers';
import { Provider } from '@ethersproject/providers';
import type {
  IPositionRouter,
  IPositionRouterInterface,
} from '../IPositionRouter';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address[]',
        name: '_path',
        type: 'address[]',
      },
      {
        internalType: 'address',
        name: '_indexToken',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_collateralDelta',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_sizeDelta',
        type: 'uint256',
      },
      {
        internalType: 'bool',
        name: '_isLong',
        type: 'bool',
      },
      {
        internalType: 'address',
        name: '_receiver',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_acceptablePrice',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_minOut',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_executionFee',
        type: 'uint256',
      },
      {
        internalType: 'bool',
        name: '_withdrawETH',
        type: 'bool',
      },
    ],
    name: 'createDecreasePosition',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: '_path',
        type: 'address[]',
      },
      {
        internalType: 'address',
        name: '_indexToken',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_amountIn',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_minOut',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_sizeDelta',
        type: 'uint256',
      },
      {
        internalType: 'bool',
        name: '_isLong',
        type: 'bool',
      },
      {
        internalType: 'uint256',
        name: '_acceptablePrice',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_executionFee',
        type: 'uint256',
      },
      {
        internalType: 'bytes32',
        name: '_referralCode',
        type: 'bytes32',
      },
    ],
    name: 'createIncreasePosition',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'decreasePositionsIndex',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'key',
        type: 'bytes32',
      },
      {
        internalType: 'address payable',
        name: '_executionFeeReceiver',
        type: 'address',
      },
    ],
    name: 'executeDecreasePosition',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_count',
        type: 'uint256',
      },
      {
        internalType: 'address payable',
        name: '_executionFeeReceiver',
        type: 'address',
      },
    ],
    name: 'executeDecreasePositions',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'key',
        type: 'bytes32',
      },
      {
        internalType: 'address payable',
        name: '_executionFeeReceiver',
        type: 'address',
      },
    ],
    name: 'executeIncreasePosition',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_count',
        type: 'uint256',
      },
      {
        internalType: 'address payable',
        name: '_executionFeeReceiver',
        type: 'address',
      },
    ],
    name: 'executeIncreasePositions',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'getRequestKey',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'increasePositionsIndex',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

export class IPositionRouter__factory {
  static readonly abi = _abi;
  static createInterface(): IPositionRouterInterface {
    return new utils.Interface(_abi) as IPositionRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IPositionRouter {
    return new Contract(address, _abi, signerOrProvider) as IPositionRouter;
  }
}
