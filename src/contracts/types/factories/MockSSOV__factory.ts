/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { MockSSOV, MockSSOVInterface } from '../MockSSOV';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_quote',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'counter',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'currentEpoch',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'deposit',
    outputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'deposits',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'epochStrikes',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'getEpochStrikes',
    outputs: [
      {
        internalType: 'uint256[]',
        name: '',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'getRewardTokensToDistribute',
    outputs: [
      {
        internalType: 'address[]',
        name: '',
        type: 'address[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'lossPercentage',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'quote',
    outputs: [
      {
        internalType: 'contract IERC20',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'testRewardTokens',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'withdraw',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'uint256[]',
        name: '',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'writePosition',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040523480156200001157600080fd5b506040516200299a3803806200299a8339810160408190526200003491620001af565b600080546001600160a01b0319166001600160a01b038316178155805b600381101562000198576040516200006990620001a1565b6200007490620001e1565b604051809103906000f08015801562000091573d6000803e3d6000fd5b506040516340c10f1960e01b815230600482015269152d02c7e14af680000060248201529092506001600160a01b038316906340c10f1990604401600060405180830381600087803b158015620000e757600080fd5b505af1158015620000fc573d6000803e3d6000fd5b505060038054600180820183556000929092527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b0319166001600160a01b038716179055600492506200015c9150839062000240565b6200016d9064174876e8006200025b565b81546001810183556000928352602090922090910155806200018f816200027d565b91505062000051565b5050506200029b565b611df88062000ba283390190565b600060208284031215620001c257600080fd5b81516001600160a01b0381168114620001da57600080fd5b9392505050565b60408152600062000206604083016004815263151154d560e21b602082015260400190565b8281036020840152620001da816004815263151154d560e21b602082015260400190565b634e487b7160e01b600052601160045260246000fd5b600082198211156200025657620002566200022a565b500190565b60008160001904831182151516156200027857620002786200022a565b500290565b60006000198214156200029457620002946200022a565b5060010190565b6108f780620002ab6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063766718081161007157806376671808146101785780638dbdbe6d14610181578063999b93af14610194578063a624ec63146101a7578063d6d68177146101e1578063e7c01d861461020c57600080fd5b806315943b99146100b95780632e1a7d4d146100e25780633ad85dfb14610103578063519c45671461012e578063562b71531461014f57806361bc221a1461016f575b600080fd5b6100cc6100c7366004610691565b610215565b6040516100d991906106e5565b60405180910390f35b6100f56100f0366004610691565b61026f565b6040516100d99291906106ff565b610116610111366004610691565b610506565b6040516001600160a01b0390911681526020016100d9565b61014161013c366004610691565b610530565b6040519081526020016100d9565b61016261015d366004610691565b610551565b6040516100d99190610720565b61014160015481565b61014160055481565b61014161018f366004610789565b6105b4565b600054610116906001600160a01b031681565b6101c16101b5366004610691565b60008080809193509193565b6040805194855260208501939093529183015260608201526080016100d9565b6101416101ef3660046107be565b600660209081526000928352604080842090915290825290205481565b61014160025481565b6060600480548060200260200160405190810160405280929190818152602001828054801561026357602002820191906000526020600020905b81548152602001906001019080831161024f575b50505050509050919050565b604080516003808252608082019092526000916060918391602082018480368337019050509050678ac7230489e80000816000815181106102b2576102b26107e8565b6020026020010181815250506801158e460913d00000816001815181106102db576102db6107e8565b6020026020010181815250506801a055690d9db8000081600281518110610304576103046107e8565b60200260200101818152505060005b60035481101561040d5760038181548110610330576103306107e8565b9060005260206000200160009054906101000a90046001600160a01b03166001600160a01b031663a9059cbb3384848151811061036f5761036f6107e8565b60200260200101516040518363ffffffff1660e01b81526004016103a89291906001600160a01b03929092168252602082015260400190565b602060405180830381600087803b1580156103c257600080fd5b505af11580156103d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103fa91906107fe565b508061040581610836565b915050610313565b503360009081526006602090815260408083208784529091529020546002541561045b576305f5e100600254826104449190610851565b61044e9190610870565b6104589082610892565b90505b60005460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b1580156104a757600080fd5b505af11580156104bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104df91906107fe565b50336000908152600660209081526040808320978352969052948520949094559293915050565b6003818154811061051657600080fd5b6000918252602090912001546001600160a01b0316905081565b6004818154811061054057600080fd5b600091825260209091200154905081565b6060600380548060200260200160405190810160405280929190818152602001828054801561026357602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161058b5750505050509050919050565b600080546040516323b872dd60e01b8152336004820152306024820152604481018590526001600160a01b03909116906323b872dd90606401602060405180830381600087803b15801561060757600080fd5b505af115801561061b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063f91906107fe565b506001805490600061065083610836565b90915550503360009081526006602090815260408083206001548452909152812080548592906106819084906108a9565b9091555050600154949350505050565b6000602082840312156106a357600080fd5b5035919050565b600081518084526020808501945080840160005b838110156106da578151875295820195908201906001016106be565b509495945050505050565b6020815260006106f860208301846106aa565b9392505050565b82815260406020820152600061071860408301846106aa565b949350505050565b6020808252825182820181905260009190848201906040850190845b818110156107615783516001600160a01b03168352928401929184019160010161073c565b50909695505050505050565b80356001600160a01b038116811461078457600080fd5b919050565b60008060006060848603121561079e57600080fd5b83359250602084013591506107b56040850161076d565b90509250925092565b600080604083850312156107d157600080fd5b6107da8361076d565b946020939093013593505050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561081057600080fd5b815180151581146106f857600080fd5b634e487b7160e01b600052601160045260246000fd5b600060001982141561084a5761084a610820565b5060010190565b600081600019048311821515161561086b5761086b610820565b500290565b60008261088d57634e487b7160e01b600052601260045260246000fd5b500490565b6000828210156108a4576108a4610820565b500390565b600082198211156108bc576108bc610820565b50019056fea26469706673582212206f354b8fb6c6cc843b96aaa3527f132a5f9b5c6e4814d38aec298fc993da521064736f6c6343000809003360806040523480156200001157600080fd5b5060405162001df838038062001df88339810160408190526200003491620003b5565b8151829082906200004d90600590602085019062000242565b5080516200006390600690602084019062000242565b50506007805460ff19169055506200007d600033620000dd565b620000a97f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a633620000dd565b620000d57f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33620000dd565b50506200045c565b620000e98282620000ed565b5050565b6200010482826200013060201b62000a611760201c565b60008281526001602090815260409091206200012b91839062000ae5620001d0821b17901c565b505050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff16620000e9576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556200018c3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000620001e7836001600160a01b038416620001f0565b90505b92915050565b60008181526001830160205260408120546200023957508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155620001ea565b506000620001ea565b82805462000250906200041f565b90600052602060002090601f016020900481019282620002745760008555620002bf565b82601f106200028f57805160ff1916838001178555620002bf565b82800160010185558215620002bf579182015b82811115620002bf578251825591602001919060010190620002a2565b50620002cd929150620002d1565b5090565b5b80821115620002cd5760008155600101620002d2565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200031057600080fd5b81516001600160401b03808211156200032d576200032d620002e8565b604051601f8301601f19908116603f01168101908282118183101715620003585762000358620002e8565b816040528381526020925086838588010111156200037557600080fd5b600091505b838210156200039957858201830151818301840152908201906200037a565b83821115620003ab5760008385830101525b9695505050505050565b60008060408385031215620003c957600080fd5b82516001600160401b0380821115620003e157600080fd5b620003ef86838701620002fe565b935060208501519150808211156200040657600080fd5b506200041585828601620002fe565b9150509250929050565b600181811c908216806200043457607f821691505b602082108114156200045657634e487b7160e01b600052602260045260246000fd5b50919050565b61198c806200046c6000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806370a08231116100f9578063a457c2d711610097578063d539139311610071578063d5391393146103af578063d547741f146103d6578063dd62ed3e146103e9578063e63ab1e91461042257600080fd5b8063a457c2d714610376578063a9059cbb14610389578063ca15c8731461039c57600080fd5b80639010d07c116100d35780639010d07c1461032857806391d148541461035357806395d89b4114610366578063a217fddf1461036e57600080fd5b806370a08231146102e457806379cc67901461030d5780638456cb591461032057600080fd5b8063313ce567116101665780633f4ba83a116101405780633f4ba83a146102ab57806340c10f19146102b357806342966c68146102c65780635c975abb146102d957600080fd5b8063313ce5671461027657806336568abe14610285578063395093511461029857600080fd5b806318160ddd116101a257806318160ddd1461021957806323b872dd1461022b578063248a9ca31461023e5780632f2ff15d1461026157600080fd5b806301ffc9a7146101c957806306fdde03146101f1578063095ea7b314610206575b600080fd5b6101dc6101d7366004611632565b610449565b60405190151581526020015b60405180910390f35b6101f9610474565b6040516101e89190611688565b6101dc6102143660046116d7565b610506565b6004545b6040519081526020016101e8565b6101dc610239366004611701565b61051c565b61021d61024c36600461173d565b60009081526020819052604090206001015490565b61027461026f366004611756565b6105cb565b005b604051601281526020016101e8565b610274610293366004611756565b6105f6565b6101dc6102a63660046116d7565b610674565b6102746106b0565b6102746102c13660046116d7565b610756565b6102746102d436600461173d565b6107f5565b60075460ff166101dc565b61021d6102f2366004611782565b6001600160a01b031660009081526002602052604090205490565b61027461031b3660046116d7565b610802565b610274610883565b61033b61033636600461179d565b610927565b6040516001600160a01b0390911681526020016101e8565b6101dc610361366004611756565b610946565b6101f961096f565b61021d600081565b6101dc6103843660046116d7565b61097e565b6101dc6103973660046116d7565b610a17565b61021d6103aa36600461173d565b610a24565b61021d7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6102746103e4366004611756565b610a3b565b61021d6103f73660046117bf565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b61021d7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b60006001600160e01b03198216635a05180f60e01b148061046e575061046e82610afa565b92915050565b606060058054610483906117e9565b80601f01602080910402602001604051908101604052809291908181526020018280546104af906117e9565b80156104fc5780601f106104d1576101008083540402835291602001916104fc565b820191906000526020600020905b8154815290600101906020018083116104df57829003601f168201915b5050505050905090565b6000610513338484610b2f565b50600192915050565b6000610529848484610c53565b6001600160a01b0384166000908152600360209081526040808320338452909152902054828110156105b35760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6105c08533858403610b2f565b506001949350505050565b6000828152602081905260409020600101546105e78133610e2e565b6105f18383610e92565b505050565b6001600160a01b03811633146106665760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084016105aa565b6106708282610eb4565b5050565b3360008181526003602090815260408083206001600160a01b038716845290915281205490916105139185906106ab90869061183a565b610b2f565b6106da7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33610946565b61074c5760405162461bcd60e51b815260206004820152603960248201527f45524332305072657365744d696e7465725061757365723a206d75737420686160448201527f76652070617573657220726f6c6520746f20756e70617573650000000000000060648201526084016105aa565b610754610ed6565b565b6107807f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a633610946565b6107eb5760405162461bcd60e51b815260206004820152603660248201527f45524332305072657365744d696e7465725061757365723a206d7573742068616044820152751d99481b5a5b9d195c881c9bdb19481d1bc81b5a5b9d60521b60648201526084016105aa565b6106708282610f69565b6107ff3382611054565b50565b600061080e83336103f7565b90508181101561086c5760405162461bcd60e51b8152602060048201526024808201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77604482015263616e636560e01b60648201526084016105aa565b6108798333848403610b2f565b6105f18383611054565b6108ad7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33610946565b61091f5760405162461bcd60e51b815260206004820152603760248201527f45524332305072657365744d696e7465725061757365723a206d75737420686160448201527f76652070617573657220726f6c6520746f20706175736500000000000000000060648201526084016105aa565b6107546111ae565b600082815260016020526040812061093f9083611229565b9392505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b606060068054610483906117e9565b3360009081526003602090815260408083206001600160a01b038616845290915281205482811015610a005760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016105aa565b610a0d3385858403610b2f565b5060019392505050565b6000610513338484610c53565b600081815260016020526040812061046e90611235565b600082815260208190526040902060010154610a578133610e2e565b6105f18383610eb4565b610a6b8282610946565b610670576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055610aa13390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600061093f836001600160a01b03841661123f565b60006001600160e01b03198216637965db0b60e01b148061046e57506301ffc9a760e01b6001600160e01b031983161461046e565b6001600160a01b038316610b915760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016105aa565b6001600160a01b038216610bf25760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016105aa565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610cb75760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016105aa565b6001600160a01b038216610d195760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105aa565b610d2483838361128e565b6001600160a01b03831660009081526002602052604090205481811015610d9c5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016105aa565b6001600160a01b03808516600090815260026020526040808220858503905591851681529081208054849290610dd390849061183a565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e1f91815260200190565b60405180910390a35b50505050565b610e388282610946565b61067057610e50816001600160a01b03166014611299565b610e5b836020611299565b604051602001610e6c929190611852565b60408051601f198184030181529082905262461bcd60e51b82526105aa91600401611688565b610e9c8282610a61565b60008281526001602052604090206105f19082610ae5565b610ebe8282611435565b60008281526001602052604090206105f1908261149a565b60075460ff16610f1f5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016105aa565b6007805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b038216610fbf5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016105aa565b610fcb6000838361128e565b8060046000828254610fdd919061183a565b90915550506001600160a01b0382166000908152600260205260408120805483929061100a90849061183a565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b0382166110b45760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016105aa565b6110c08260008361128e565b6001600160a01b038216600090815260026020526040902054818110156111345760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016105aa565b6001600160a01b03831660009081526002602052604081208383039055600480548492906111639084906118c7565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b60075460ff16156111f45760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016105aa565b6007805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610f4c3390565b600061093f83836114af565b600061046e825490565b60008181526001830160205260408120546112865750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561046e565b50600061046e565b6105f18383836114d9565b606060006112a88360026118de565b6112b390600261183a565b67ffffffffffffffff8111156112cb576112cb6118fd565b6040519080825280601f01601f1916602001820160405280156112f5576020820181803683370190505b509050600360fc1b8160008151811061131057611310611913565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061133f5761133f611913565b60200101906001600160f81b031916908160001a90535060006113638460026118de565b61136e90600161183a565b90505b60018111156113e6576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106113a2576113a2611913565b1a60f81b8282815181106113b8576113b8611913565b60200101906001600160f81b031916908160001a90535060049490941c936113df81611929565b9050611371565b50831561093f5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016105aa565b61143f8282610946565b15610670576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b600061093f836001600160a01b03841661153f565b60008260000182815481106114c6576114c6611913565b9060005260206000200154905092915050565b60075460ff16156105f15760405162461bcd60e51b815260206004820152602a60248201527f45524332305061757361626c653a20746f6b656e207472616e736665722077686044820152691a5b19481c185d5cd95960b21b60648201526084016105aa565b600081815260018301602052604081205480156116285760006115636001836118c7565b8554909150600090611577906001906118c7565b90508181146115dc57600086600001828154811061159757611597611913565b90600052602060002001549050808760000184815481106115ba576115ba611913565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806115ed576115ed611940565b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061046e565b600091505061046e565b60006020828403121561164457600080fd5b81356001600160e01b03198116811461093f57600080fd5b60005b8381101561167757818101518382015260200161165f565b83811115610e285750506000910152565b60208152600082518060208401526116a781604085016020870161165c565b601f01601f19169190910160400192915050565b80356001600160a01b03811681146116d257600080fd5b919050565b600080604083850312156116ea57600080fd5b6116f3836116bb565b946020939093013593505050565b60008060006060848603121561171657600080fd5b61171f846116bb565b925061172d602085016116bb565b9150604084013590509250925092565b60006020828403121561174f57600080fd5b5035919050565b6000806040838503121561176957600080fd5b82359150611779602084016116bb565b90509250929050565b60006020828403121561179457600080fd5b61093f826116bb565b600080604083850312156117b057600080fd5b50508035926020909101359150565b600080604083850312156117d257600080fd5b6117db836116bb565b9150611779602084016116bb565b600181811c908216806117fd57607f821691505b6020821081141561181e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561184d5761184d611824565b500190565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081526000835161188a81601785016020880161165c565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516118bb81602884016020880161165c565b01602801949350505050565b6000828210156118d9576118d9611824565b500390565b60008160001904831182151516156118f8576118f8611824565b500290565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60008161193857611938611824565b506000190190565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220d2bbff39a8c736949bb11b4aef3f939f6e21ac4549d4418977fab3aa4cf1570264736f6c63430008090033';

export class MockSSOV__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _quote: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockSSOV> {
    return super.deploy(_quote, overrides || {}) as Promise<MockSSOV>;
  }
  getDeployTransaction(
    _quote: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_quote, overrides || {});
  }
  attach(address: string): MockSSOV {
    return super.attach(address) as MockSSOV;
  }
  connect(signer: Signer): MockSSOV__factory {
    return super.connect(signer) as MockSSOV__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockSSOVInterface {
    return new utils.Interface(_abi) as MockSSOVInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockSSOV {
    return new Contract(address, _abi, signerOrProvider) as MockSSOV;
  }
}
