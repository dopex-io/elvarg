/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { WETH9, WETH9Interface } from '../WETH9';

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'src',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'guy',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'wad',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'dst',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'wad',
        type: 'uint256',
      },
    ],
    name: 'Deposit',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'src',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'dst',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'wad',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'src',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'wad',
        type: 'uint256',
      },
    ],
    name: 'Withdrawal',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'allowance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'guy',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'wad',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'decimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'deposit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'mint',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'dst',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'wad',
        type: 'uint256',
      },
    ],
    name: 'transfer',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'src',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'dst',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'wad',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'wad',
        type: 'uint256',
      },
    ],
    name: 'withdraw',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    stateMutability: 'payable',
    type: 'receive',
  },
];

const _bytecode =
  '0x60c0604052600d60808190526c2bb930b83832b21022ba3432b960991b60a090815261002e916000919061007a565b50604080518082019091526004808252630ae8aa8960e31b602090920191825261005a9160019161007a565b506002805460ff1916601217905534801561007457600080fd5b5061014e565b82805461008690610113565b90600052602060002090601f0160209004810192826100a857600085556100ee565b82601f106100c157805160ff19168380011785556100ee565b828001600101855582156100ee579182015b828111156100ee5782518255916020019190600101906100d3565b506100fa9291506100fe565b5090565b5b808211156100fa57600081556001016100ff565b600181811c9082168061012757607f821691505b6020821081141561014857634e487b7160e01b600052602260045260246000fd5b50919050565b61082a8061015d6000396000f3fe6080604052600436106100ab5760003560e01c806340c10f191161006457806340c10f19146101a357806370a08231146101c357806395d89b41146101f0578063a9059cbb14610205578063d0e30db014610225578063dd62ed3e1461022d57600080fd5b806306fdde03146100bf578063095ea7b3146100ea57806318160ddd1461011a57806323b872dd146101375780632e1a7d4d14610157578063313ce5671461017757600080fd5b366100ba576100b8610265565b005b600080fd5b3480156100cb57600080fd5b506100d46102c0565b6040516100e19190610636565b60405180910390f35b3480156100f657600080fd5b5061010a6101053660046106a7565b61034e565b60405190151581526020016100e1565b34801561012657600080fd5b50475b6040519081526020016100e1565b34801561014357600080fd5b5061010a6101523660046106d1565b6103ba565b34801561016357600080fd5b506100b861017236600461070d565b61053e565b34801561018357600080fd5b506002546101919060ff1681565b60405160ff90911681526020016100e1565b3480156101af57600080fd5b506100b86101be3660046106a7565b6105e4565b3480156101cf57600080fd5b506101296101de366004610726565b60036020526000908152604090205481565b3480156101fc57600080fd5b506100d4610615565b34801561021157600080fd5b5061010a6102203660046106a7565b610622565b6100b8610265565b34801561023957600080fd5b50610129610248366004610741565b600460209081526000928352604080842090915290825290205481565b336000908152600360205260408120805434929061028490849061078a565b909155505060405134815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c9060200160405180910390a2565b600080546102cd906107a2565b80601f01602080910402602001604051908101604052809291908181526020018280546102f9906107a2565b80156103465780601f1061031b57610100808354040283529160200191610346565b820191906000526020600020905b81548152906001019060200180831161032957829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906103a99086815260200190565b60405180910390a350600192915050565b6001600160a01b0383166000908152600360205260408120548211156103df57600080fd5b6001600160a01b038416331480159061041d57506001600160a01b038416600090815260046020908152604080832033845290915290205460001914155b1561048b576001600160a01b038416600090815260046020908152604080832033845290915290205482111561045257600080fd5b6001600160a01b0384166000908152600460209081526040808320338452909152812080548492906104859084906107dd565b90915550505b6001600160a01b038416600090815260036020526040812080548492906104b39084906107dd565b90915550506001600160a01b038316600090815260036020526040812080548492906104e090849061078a565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161052c91815260200190565b60405180910390a35060019392505050565b3360009081526003602052604090205481111561055a57600080fd5b33600090815260036020526040812080548392906105799084906107dd565b9091555050604051339082156108fc029083906000818181858888f193505050501580156105ab573d6000803e3d6000fd5b5060405181815233907f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b659060200160405180910390a250565b6001600160a01b0382166000908152600360205260408120805483929061060c90849061078a565b90915550505050565b600180546102cd906107a2565b600061062f3384846103ba565b9392505050565b600060208083528351808285015260005b8181101561066357858101830151858201604001528201610647565b81811115610675576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146106a257600080fd5b919050565b600080604083850312156106ba57600080fd5b6106c38361068b565b946020939093013593505050565b6000806000606084860312156106e657600080fd5b6106ef8461068b565b92506106fd6020850161068b565b9150604084013590509250925092565b60006020828403121561071f57600080fd5b5035919050565b60006020828403121561073857600080fd5b61062f8261068b565b6000806040838503121561075457600080fd5b61075d8361068b565b915061076b6020840161068b565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561079d5761079d610774565b500190565b600181811c908216806107b657607f821691505b602082108114156107d757634e487b7160e01b600052602260045260246000fd5b50919050565b6000828210156107ef576107ef610774565b50039056fea2646970667358221220e6a06507ee9dd6bfb081617ec5ca675654dedc4c5138e5cb9687108b8fb75d7464736f6c63430008090033';

export class WETH9__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<WETH9> {
    return super.deploy(overrides || {}) as Promise<WETH9>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): WETH9 {
    return super.attach(address) as WETH9;
  }
  connect(signer: Signer): WETH9__factory {
    return super.connect(signer) as WETH9__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WETH9Interface {
    return new utils.Interface(_abi) as WETH9Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): WETH9 {
    return new Contract(address, _abi, signerOrProvider) as WETH9;
  }
}
