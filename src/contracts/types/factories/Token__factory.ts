/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { Token, TokenInterface } from '../Token';

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
    ],
    name: 'allowance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'decimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'subtractedValue',
        type: 'uint256',
      },
    ],
    name: 'decreaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'deposit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'addedValue',
        type: 'uint256',
      },
    ],
    name: 'increaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'mint',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'recipient',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transfer',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'recipient',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'withdraw',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'withdrawToken',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b50604080518082019091526005808252642a37b5b2b760d91b602090920191825261003d9160039161007d565b50604080518082019091526005808252642a27a5a2a760d91b602090920191825261006a9160049161007d565b506005805460ff19166012179055610110565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106100be57805160ff19168380011785556100eb565b828001600101855582156100eb579182015b828111156100eb5782518255916020019190600101906100d0565b506100f79291506100fb565b5090565b5b808211156100f757600081556001016100fc565b610f1e8061011f6000396000f3fe6080604052600436106100e85760003560e01c8063395093511161008a578063a457c2d711610059578063a457c2d714610382578063a9059cbb146103bb578063d0e30db0146103f4578063dd62ed3e146103fc576100e8565b806339509351146102c857806340c10f191461030157806370a082311461033a57806395d89b411461036d576100e8565b806318160ddd116100c657806318160ddd1461020957806323b872dd146102305780632e1a7d4d14610273578063313ce5671461029d576100e8565b806301e33667146100ed57806306fdde0314610132578063095ea7b3146101bc575b600080fd5b3480156100f957600080fd5b506101306004803603606081101561011057600080fd5b506001600160a01b03813581169160208101359091169060400135610437565b005b34801561013e57600080fd5b506101476104bf565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610181578181015183820152602001610169565b50505050905090810190601f1680156101ae5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101c857600080fd5b506101f5600480360360408110156101df57600080fd5b506001600160a01b038135169060200135610555565b604080519115158252519081900360200190f35b34801561021557600080fd5b5061021e610572565b60408051918252519081900360200190f35b34801561023c57600080fd5b506101f56004803603606081101561025357600080fd5b506001600160a01b03813581169160208101359091169060400135610578565b34801561027f57600080fd5b506101306004803603602081101561029657600080fd5b50356105ff565b3480156102a957600080fd5b506102b261069e565b6040805160ff9092168252519081900360200190f35b3480156102d457600080fd5b506101f5600480360360408110156102eb57600080fd5b506001600160a01b0381351690602001356106a7565b34801561030d57600080fd5b506101306004803603604081101561032457600080fd5b506001600160a01b0381351690602001356106f5565b34801561034657600080fd5b5061021e6004803603602081101561035d57600080fd5b50356001600160a01b03166106ff565b34801561037957600080fd5b5061014761071a565b34801561038e57600080fd5b506101f5600480360360408110156103a557600080fd5b506001600160a01b03813516906020013561077b565b3480156103c757600080fd5b506101f5600480360360408110156103de57600080fd5b506001600160a01b0381351690602001356107e3565b6101306107f7565b34801561040857600080fd5b5061021e6004803603604081101561041f57600080fd5b506001600160a01b0381358116916020013516610803565b826001600160a01b031663a9059cbb83836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561048e57600080fd5b505af11580156104a2573d6000803e3d6000fd5b505050506040513d60208110156104b857600080fd5b5050505050565b60038054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561054b5780601f106105205761010080835404028352916020019161054b565b820191906000526020600020905b81548152906001019060200180831161052e57829003601f168201915b5050505050905090565b600061056961056261082e565b8484610832565b50600192915050565b60025490565b600061058584848461091e565b6105f58461059161082e565b6105f085604051806060016040528060288152602001610e32602891396001600160a01b038a166000908152600160205260408120906105cf61082e565b6001600160a01b031681526020810191909152604001600020549190610a79565b610832565b5060019392505050565b33600090815260208190526040902054811115610663576040805162461bcd60e51b815260206004820152601b60248201527f546f6b656e3a20696e73756666696369656e742062616c616e63650000000000604482015290519081900360640190fd5b61066d3382610b10565b604051339082156108fc029083906000818181858888f1935050505015801561069a573d6000803e3d6000fd5b5050565b60055460ff1690565b60006105696106b461082e565b846105f085600160006106c561082e565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610c0c565b61069a8282610c6d565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561054b5780601f106105205761010080835404028352916020019161054b565b600061056961078861082e565b846105f085604051806060016040528060258152602001610ec460259139600160006107b261082e565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190610a79565b60006105696107f061082e565b848461091e565b6108013334610c6d565b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166108775760405162461bcd60e51b8152600401808060200182810382526024815260200180610ea06024913960400191505060405180910390fd5b6001600160a01b0382166108bc5760405162461bcd60e51b8152600401808060200182810382526022815260200180610dea6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166109635760405162461bcd60e51b8152600401808060200182810382526025815260200180610e7b6025913960400191505060405180910390fd5b6001600160a01b0382166109a85760405162461bcd60e51b8152600401808060200182810382526023815260200180610da56023913960400191505060405180910390fd5b6109b3838383610d5d565b6109f081604051806060016040528060268152602001610e0c602691396001600160a01b0386166000908152602081905260409020549190610a79565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610a1f9082610c0c565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610b085760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610acd578181015183820152602001610ab5565b50505050905090810190601f168015610afa5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6001600160a01b038216610b555760405162461bcd60e51b8152600401808060200182810382526021815260200180610e5a6021913960400191505060405180910390fd5b610b6182600083610d5d565b610b9e81604051806060016040528060228152602001610dc8602291396001600160a01b0385166000908152602081905260409020549190610a79565b6001600160a01b038316600090815260208190526040902055600254610bc49082610d62565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b600082820183811015610c66576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610cc8576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b610cd460008383610d5d565b600254610ce19082610c0c565b6002556001600160a01b038216600090815260208190526040902054610d079082610c0c565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b505050565b6000610c6683836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610a7956fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212208659da0b08f031bd36d86e1d90facb24df7f5cb3dcc75215f0c825ee91174da764736f6c634300060c0033';

export class Token__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Token> {
    return super.deploy(overrides || {}) as Promise<Token>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Token {
    return super.attach(address) as Token;
  }
  connect(signer: Signer): Token__factory {
    return super.connect(signer) as Token__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new utils.Interface(_abi) as TokenInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Token {
    return new Contract(address, _abi, signerOrProvider) as Token;
  }
}
