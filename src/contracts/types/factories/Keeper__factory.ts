/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { Keeper, KeeperInterface } from '../Keeper';

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'strategy',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
    ],
    name: 'FailDecreaseManagedPosition',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'strategy',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
    ],
    name: 'FailIncreaseManagedPosition',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'strategy',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
    ],
    name: 'SuccessDecreaseManagedPosition',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'strategy',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
    ],
    name: 'SuccessIncreaseManagedPosition',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'strategyAddress',
        type: 'address',
      },
      {
        internalType: 'uint256[]',
        name: 'indexes',
        type: 'uint256[]',
      },
    ],
    name: 'clearPositions',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'strategyAddress',
        type: 'address',
      },
      {
        internalType: 'uint256[]',
        name: 'indexes',
        type: 'uint256[]',
      },
    ],
    name: 'decreasePositions',
    outputs: [
      {
        internalType: 'uint256',
        name: 'success',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'fails',
        type: 'uint256',
      },
    ],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'strategyAddress',
        type: 'address',
      },
      {
        internalType: 'uint256[]',
        name: 'indexes',
        type: 'uint256[]',
      },
    ],
    name: 'increasePositions',
    outputs: [
      {
        internalType: 'uint256',
        name: 'success',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'fails',
        type: 'uint256',
      },
    ],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'tokens',
        type: 'address[]',
      },
    ],
    name: 'withdraw',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    stateMutability: 'payable',
    type: 'receive',
  },
];

const _bytecode =
  '0x6080604052660110d9316ec00060015534801561001b57600080fd5b506100253361002a565b61007a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610b49806100896000396000f3fe6080604052600436106100745760003560e01c80638da5cb5b1161004e5780638da5cb5b146100e457806390e6b4b11461010c578063bd5dec981461011f578063f2fde38b1461013257600080fd5b80630ee8a181146100805780632dac7de0146100ad578063715018a6146100cf57600080fd5b3661007b57005b600080fd5b61009361008e36600461096c565b610152565b604080519283526020830191909152015b60405180910390f35b3480156100b957600080fd5b506100cd6100c836600461096c565b610350565b005b3480156100db57600080fd5b506100cd6103df565b3480156100f057600080fd5b506000546040516001600160a01b0390911681526020016100a4565b61009361011a36600461096c565b610415565b6100cd61012d3660046109bf565b6105f7565b34801561013e57600080fd5b506100cd61014d366004610a01565b6107ae565b6000805481906001600160a01b031633146101885760405162461bcd60e51b815260040161017f90610a23565b60405180910390fd5b600154610196908490610a6e565b34146101d85760405162461bcd60e51b8152602060048201526011602482015270496e76616c6964206d73672e76616c756560781b604482015260640161017f565b60005b8381101561033d57856001600160a01b0316639e8f517260015487878581811061020757610207610a8d565b905060200201356040518363ffffffff1660e01b815260040161022c91815260200190565b6000604051808303818588803b15801561024557600080fd5b505af193505050508015610257575060015b6102ca578161026581610aa3565b9250507f61eda8d490e7d16e9684b341c4bf3b2a4f9da94dab7b9bf6073cc3fa2f86f5288686868481811061029c5761029c610a8d565b604080516001600160a01b0390951685526020918202939093013590840152500160405180910390a1610335565b826102d481610aa3565b9350507f2b7b2ca9c9bed152fae5a379a36b1be573205a5a0d03324e1ae5ce29dcf40cac8686868481811061030b5761030b610a8d565b604080516001600160a01b0390951685526020918202939093013590840152500160405180910390a15b6001016101db565b506103488282610849565b935093915050565b6000546001600160a01b0316331461037a5760405162461bcd60e51b815260040161017f90610a23565b6040516356bd0cfd60e01b81526001600160a01b038416906356bd0cfd906103a89085908590600401610abe565b600060405180830381600087803b1580156103c257600080fd5b505af11580156103d6573d6000803e3d6000fd5b50505050505050565b6000546001600160a01b031633146104095760405162461bcd60e51b815260040161017f90610a23565b6104136000610893565b565b6000805481906001600160a01b031633146104425760405162461bcd60e51b815260040161017f90610a23565b600154610450908490610a6e565b34146104925760405162461bcd60e51b8152602060048201526011602482015270496e76616c6964206d73672e76616c756560781b604482015260640161017f565b60005b8381101561033d57856001600160a01b03166382b9b6896001548787858181106104c1576104c1610a8d565b905060200201356040518363ffffffff1660e01b81526004016104e691815260200190565b6000604051808303818588803b1580156104ff57600080fd5b505af193505050508015610511575060015b610584578161051f81610aa3565b9250507f250cd6257e0590f1461e388d2afef4e79af7b50b6e21538f928dfcfcb5df76228686868481811061055657610556610a8d565b604080516001600160a01b0390951685526020918202939093013590840152500160405180910390a16105ef565b8261058e81610aa3565b9350507f6de4e6d6811faaacf93d66ca445586e2524646a2eff7bde096391ae759904759868686848181106105c5576105c5610a8d565b604080516001600160a01b0390951685526020918202939093013590840152500160405180910390a15b600101610495565b6000546001600160a01b031633146106215760405162461bcd60e51b815260040161017f90610a23565b60405133904780156108fc02916000818181858888f1935050505015801561064d573d6000803e3d6000fd5b5060005b818110156107a95782828281811061066b5761066b610a8d565b90506020020160208101906106809190610a01565b6001600160a01b031663a9059cbb6106a06000546001600160a01b031690565b8585858181106106b2576106b2610a8d565b90506020020160208101906106c79190610a01565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a082319060240160206040518083038186803b15801561070857600080fd5b505afa15801561071c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107409190610afa565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b15801561078657600080fd5b505af115801561079a573d6000803e3d6000fd5b50505050806001019050610651565b505050565b6000546001600160a01b031633146107d85760405162461bcd60e51b815260040161017f90610a23565b6001600160a01b03811661083d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161017f565b61084681610893565b50565b604051602481018390526044810182905261088f9060640160408051601f198184030181529190526020810180516001600160e01b031662d81ed360e71b1790526108e3565b5050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b80356001600160a01b038116811461091b57600080fd5b919050565b60008083601f84011261093257600080fd5b50813567ffffffffffffffff81111561094a57600080fd5b6020830191508360208260051b850101111561096557600080fd5b9250929050565b60008060006040848603121561098157600080fd5b61098a84610904565b9250602084013567ffffffffffffffff8111156109a657600080fd5b6109b286828701610920565b9497909650939450505050565b600080602083850312156109d257600080fd5b823567ffffffffffffffff8111156109e957600080fd5b6109f585828601610920565b90969095509350505050565b600060208284031215610a1357600080fd5b610a1c82610904565b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615610a8857610a88610a58565b500290565b634e487b7160e01b600052603260045260246000fd5b6000600019821415610ab757610ab7610a58565b5060010190565b6020808252810182905260006001600160fb1b03831115610ade57600080fd5b8260051b80856040850137600092016040019182525092915050565b600060208284031215610b0c57600080fd5b505191905056fea26469706673582212201b9574618740d1ec8198cd03174d3bd12ad34435822effd42aba542e7e7e6f9d64736f6c63430008090033';

export class Keeper__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Keeper> {
    return super.deploy(overrides || {}) as Promise<Keeper>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Keeper {
    return super.attach(address) as Keeper;
  }
  connect(signer: Signer): Keeper__factory {
    return super.connect(signer) as Keeper__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KeeperInterface {
    return new utils.Interface(_abi) as KeeperInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Keeper {
    return new Contract(address, _abi, signerOrProvider) as Keeper;
  }
}
