/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { MonthlyExpiry, MonthlyExpiryInterface } from '../MonthlyExpiry';

const _abi = [
  {
    inputs: [],
    name: 'getMonthlyExpiryFromTimestamp',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b5061073c806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063242a0f3814610030575b600080fd5b61003861004a565b60405190815260200160405180910390f35b6000428161007561005a83610181565b610063846101a1565b61006e906001610547565b60006101bb565b90506005610082826101de565b10156100ba576100b761009482610181565b61009d836101a1565b60076100a885610212565b6100b2919061055f565b6101bb565b90505b60006101026100c883610181565b6100d1846101a1565b6100da856101de565b6100e386610212565b6100ee906005610547565b6100f8919061055f565b6008600080610224565b905082811161017a57600061012d61011985610181565b610122866101a1565b61006e906002610547565b9050600561013a826101de565b101561014f5761014c61009482610181565b90505b61017661015b82610181565b610164836101a1565b61016d846101de565b6100e385610212565b9150505b9392505050565b6000610198610193620151808461058c565b610280565b50909392505050565b60006101b3610193620151808461058c565b509392505050565b6000620151806101cc8585856103f4565b6101d691906105a0565b949350505050565b6000806101ee620151808461058c565b905060076101fd826003610547565b61020791906105bf565b61017a906001610547565b60006101d6610193620151808461058c565b600081610232603c856105a0565b61023e610e10876105a0565b6201518061024d8b8b8b6103f4565b61025791906105a0565b6102619190610547565b61026b9190610547565b6102759190610547565b979650505050505050565b60008080838162253d8c6102978362010bd96105d3565b6102a191906105d3565b9050600062023ab16102b4836004610614565b6102be9190610699565b905060046102cf8262023ab1610614565b6102da9060036105d3565b6102e49190610699565b6102ee90836106c7565b9150600062164b096103018460016105d3565b61030d90610fa0610614565b6103179190610699565b90506004610327826105b5610614565b6103319190610699565b61033b90846106c7565b61034690601f6105d3565b9250600061098f610358856050610614565b6103629190610699565b9050600060506103748361098f610614565b61037e9190610699565b61038890866106c7565b9050610395600b83610699565b94506103a285600c610614565b6103ad8360026105d3565b6103b791906106c7565b915084836103c66031876106c7565b6103d1906064610614565b6103db91906105d3565b6103e591906105d3565b9a919950975095505050505050565b60006107b284101561040557600080fd5b838383600062253d8c60046064600c61041f600e886106c7565b6104299190610699565b610435886113246105d3565b61043f91906105d3565b6104499190610699565b610454906003610614565b61045e9190610699565b600c8061046c600e886106c7565b6104769190610699565b61048190600c610614565b61048c6002886106c7565b61049691906106c7565b6104a29061016f610614565b6104ac9190610699565b6004600c6104bb600e896106c7565b6104c59190610699565b6104d1896112c06105d3565b6104db91906105d3565b6104e7906105b5610614565b6104f19190610699565b6104fd617d4b876106c7565b61050791906105d3565b61051191906105d3565b61051b91906106c7565b61052591906106c7565b98975050505050505050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561055a5761055a610531565b500190565b60008282101561057157610571610531565b500390565b634e487b7160e01b600052601260045260246000fd5b60008261059b5761059b610576565b500490565b60008160001904831182151516156105ba576105ba610531565b500290565b6000826105ce576105ce610576565b500690565b600080821280156001600160ff1b03849003851316156105f5576105f5610531565b600160ff1b839003841281161561060e5761060e610531565b50500190565b60006001600160ff1b038184138284138082168684048611161561063a5761063a610531565b600160ff1b600087128281168783058912161561065957610659610531565b6000871292508782058712848416161561067557610675610531565b8785058712818416161561068b5761068b610531565b505050929093029392505050565b6000826106a8576106a8610576565b600160ff1b8214600019841416156106c2576106c2610531565b500590565b60008083128015600160ff1b8501841216156106e5576106e5610531565b6001600160ff1b038401831381161561070057610700610531565b5050039056fea26469706673582212204a1185e91ad0286210a84187caebdb3d510835706fa7f47007a59949b5aae09664736f6c63430008090033';

export class MonthlyExpiry__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MonthlyExpiry> {
    return super.deploy(overrides || {}) as Promise<MonthlyExpiry>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MonthlyExpiry {
    return super.attach(address) as MonthlyExpiry;
  }
  connect(signer: Signer): MonthlyExpiry__factory {
    return super.connect(signer) as MonthlyExpiry__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MonthlyExpiryInterface {
    return new utils.Interface(_abi) as MonthlyExpiryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MonthlyExpiry {
    return new Contract(address, _abi, signerOrProvider) as MonthlyExpiry;
  }
}
