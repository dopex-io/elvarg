/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers';
import { Provider } from '@ethersproject/providers';
import type {
  IDopexPositionManager,
  IDopexPositionManagerInterface,
} from '../IDopexPositionManager';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'executeRequiredAction',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'getRequiredAction',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'requiredAction',
    outputs: [
      {
        internalType: 'enum IDopexPositionManager.RequiredAction',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

export class IDopexPositionManager__factory {
  static readonly abi = _abi;
  static createInterface(): IDopexPositionManagerInterface {
    return new utils.Interface(_abi) as IDopexPositionManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IDopexPositionManager {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IDopexPositionManager;
  }
}
