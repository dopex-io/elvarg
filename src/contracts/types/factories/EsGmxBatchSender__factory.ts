/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  EsGmxBatchSender,
  EsGmxBatchSenderInterface,
} from '../EsGmxBatchSender';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_esGmx',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'admin',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'esGmx',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVester',
        name: '_vester',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_minRatio',
        type: 'uint256',
      },
      {
        internalType: 'address[]',
        name: '_accounts',
        type: 'address[]',
      },
      {
        internalType: 'uint256[]',
        name: '_amounts',
        type: 'uint256[]',
      },
    ],
    name: 'send',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b50604051610a47380380610a478339818101604052602081101561003357600080fd5b5051600080546001600160a01b03199081163317909155600180546001600160a01b03909316929091169190911790556109d5806100726000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80636a192a78146100465780638b8f837b1461006a578063f851a440146101a8575b600080fd5b61004e6101b0565b604080516001600160a01b039092168252519081900360200190f35b6101a66004803603608081101561008057600080fd5b6001600160a01b03823516916020810135918101906060810160408201356401000000008111156100b057600080fd5b8201836020820111156100c257600080fd5b803590602001918460208302840111640100000000831117156100e457600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929594936020810193503591505064010000000081111561013457600080fd5b82018360208201111561014657600080fd5b8035906020019184602083028401116401000000008311171561016857600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506101bf945050505050565b005b61004e610733565b6001546001600160a01b031681565b6000546001600160a01b0316331461021e576040805162461bcd60e51b815260206004820152601b60248201527f4573476d78426174636853656e6465723a20666f7262696464656e0000000000604482015290519081900360640190fd5b6000846001600160a01b0316636bcb411a6040518163ffffffff1660e01b815260040160206040518083038186803b15801561025957600080fd5b505afa15801561026d573d6000803e3d6000fd5b505050506040513d602081101561028357600080fd5b5051905060005b835181101561072b5760015484516001600160a01b03909116906323b872dd9033908790859081106102b857fe5b60200260200101518685815181106102cc57fe5b60200260200101516040518463ffffffff1660e01b815260040180846001600160a01b03168152602001836001600160a01b031681526020018281526020019350505050602060405180830381600087803b15801561032a57600080fd5b505af115801561033e573d6000803e3d6000fd5b505050506040513d602081101561035457600080fd5b505082516000906104059085908490811061036b57fe5b6020026020010151886001600160a01b031663b71bce2a88868151811061038e57fe5b60200260200101516040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156103d357600080fd5b505afa1580156103e7573d6000803e3d6000fd5b505050506040513d60208110156103fd57600080fd5b505190610742565b9050866001600160a01b031663d0b038b786848151811061042257fe5b6020026020010151836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b15801561047157600080fd5b505af1158015610485573d6000803e3d6000fd5b505050506000836001600160a01b0316633792def38785815181106104a657fe5b60200260200101516040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156104eb57600080fd5b505afa1580156104ff573d6000803e3d6000fd5b505050506040513d602081101561051557600080fd5b5051905060006105258284610742565b90506000896001600160a01b03166345f01ee689878151811061054457fe5b60200260200101516040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561058957600080fd5b505afa15801561059d573d6000803e3d6000fd5b505050506040513d60208110156105b357600080fd5b505190506105c1828a6107a5565b8111156105d15750505050610723565b60006105dd8a846107a5565b90506106896106828461067c878b6001600160a01b031663a31802178f8d8151811061060557fe5b60200260200101516040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561064a57600080fd5b505afa15801561065e573d6000803e3d6000fd5b505050506040513d602081101561067457600080fd5b5051906107a5565b906107fe565b8290610840565b90506106998561067c83866107a5565b90508a6001600160a01b031663e3ecc4b28a88815181106106b657fe5b6020026020010151836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b15801561070557600080fd5b505af1158015610719573d6000803e3d6000fd5b5050505050505050505b60010161028a565b505050505050565b6000546001600160a01b031681565b60008282018381101561079c576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b90505b92915050565b6000826107b45750600061079f565b828202828482816107c157fe5b041461079c5760405162461bcd60e51b815260040180806020018281038252602181526020018061097f6021913960400191505060405180910390fd5b600061079c83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610882565b600061079c83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610924565b6000818361090e5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156108d35781810151838201526020016108bb565b50505050905090810190601f1680156109005780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858161091a57fe5b0495945050505050565b600081848411156109765760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156108d35781810151838201526020016108bb565b50505090039056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a26469706673582212209b618cf1691e9ae2bda22ca9d6a8b70d245935761cca16bcd5e857c915162b0b64736f6c634300060c0033';

export class EsGmxBatchSender__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _esGmx: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EsGmxBatchSender> {
    return super.deploy(_esGmx, overrides || {}) as Promise<EsGmxBatchSender>;
  }
  getDeployTransaction(
    _esGmx: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_esGmx, overrides || {});
  }
  attach(address: string): EsGmxBatchSender {
    return super.attach(address) as EsGmxBatchSender;
  }
  connect(signer: Signer): EsGmxBatchSender__factory {
    return super.connect(signer) as EsGmxBatchSender__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EsGmxBatchSenderInterface {
    return new utils.Interface(_abi) as EsGmxBatchSenderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EsGmxBatchSender {
    return new Contract(address, _abi, signerOrProvider) as EsGmxBatchSender;
  }
}
